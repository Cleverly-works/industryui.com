{"version":3,"sources":["../../../components/form/input/input.js"],"names":["React","func","node","object","oneOf","shape","string","styled","css","Adornment","arrayOfValues","InputDecorationTypes","Space","Text","THEME_COLOUR","THEME_SIZE","colourPlate","dark","darkText","darkBorder","grey80","grey","disabled","readOnly","success","formSuccess","warning","gold40","inputThemeColourPlate","InputTypes","NUMBER","TEXT","PASSWORD","colourProvider","theme","decoration","COLOUR","Input","adornments","errors","label","message","name","placeholder","register","size","type","props","startAdornment","DISABLED","READONLY","endAdornment","StyledLabel","StyledMessage","InputWrapper","div","SM","MD","LG","withAdornmentStyles","StyledInput","input","attrs","autoComplete","autoFocus","required","primary","Wrapper","DEFAULT","WARNING","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Input\n */\n\n// React\nimport React from 'react'\nimport { func, node, object, oneOf, shape, string } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport {\n  Adornment,\n  arrayOfValues,\n  InputDecorationTypes,\n  Space,\n  Text\n} from '../../'\nimport { THEME_COLOUR } from '../../theme/variables/colour'\nimport { THEME_SIZE } from '../../theme/constants/size'\n\nconst colourPlate = {\n  dark: THEME_COLOUR.darkText,\n  darkBorder: THEME_COLOUR.grey80,\n  default: THEME_COLOUR.grey,\n  disabled: THEME_COLOUR.dark,\n  readOnly: THEME_COLOUR.grey,\n  success: THEME_COLOUR.formSuccess,\n  warning: THEME_COLOUR.gold40\n}\n\nconst inputThemeColourPlate = {\n  dark: 'darkText',\n  darkBorder: 'grey80',\n  default: 'grey',\n  disabled: 'dark',\n  readOnly: 'grey',\n  success: 'formSuccess',\n  warning: 'gold40'\n}\n\nexport const InputTypes = {\n  NUMBER: 'number',\n  TEXT: 'text',\n  PASSWORD: 'password'\n}\n\nconst colourProvider = (theme, decoration) => {\n  if (theme?.COLOUR) {\n    return theme.COLOUR[inputThemeColourPlate[decoration]]\n  } else {\n    return colourPlate[decoration]\n  }\n}\n\nexport const Input = ({\n  adornments,\n  decoration,\n  errors,\n  label,\n  message,\n  name,\n  placeholder,\n  register,\n  size,\n  type,\n  ...props\n}) => {\n  return (\n    <Wrapper\n      theme={props.theme}\n      decoration={decoration}\n      readOnly={props.readOnly}>\n      {label && (\n        <>\n          <Space marginBottom=\"xs\">\n            <StyledLabel theme={props.theme} content={label} />\n          </Space>\n        </>\n      )}\n      <Space marginBottom=\"xs\">\n        <InputWrapper size={size}>\n          {adornments?.startAdornment && (\n            <Adornment startAdornment size={size}>\n              {adornments.startAdornment}\n            </Adornment>\n          )}\n\n          <StyledInput\n            adornments={adornments}\n            disabled={\n              props.disabled || decoration === InputDecorationTypes.DISABLED\n            }\n            message={message}\n            name={name}\n            placeholder={placeholder}\n            readOnly={\n              props.readOnly || decoration === InputDecorationTypes.READONLY\n            }\n            ref={register}\n            size={size}\n            type={type}\n            required={errors[name]?.type === 'required'}\n            {...props}\n          />\n\n          {adornments?.endAdornment && (\n            <Adornment size={size}>{adornments.endAdornment}</Adornment>\n          )}\n        </InputWrapper>\n      </Space>\n      {message && <StyledMessage>{message}</StyledMessage>}\n    </Wrapper>\n  )\n}\n\nconst StyledLabel = styled(Text)`\n  color: ${({ theme }) => colourProvider(theme, 'dark')};\n  font-size: 0.75rem;\n`\nconst StyledMessage = styled(Text)`\n  font-size: 0.625rem;\n  color: ${({ theme, decoration }) => colourProvider(theme, 'disabled')};\n`\n\nconst InputWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  width: 100%;\n  ${({ size }) => {\n    switch (size) {\n      case THEME_SIZE.SM:\n        return css`\n          height: 1.5rem;\n          ${Adornment} {\n            padding: 0.5rem 1rem;\n          }\n        `\n      case THEME_SIZE.MD:\n        return css`\n          height: 1.875rem;\n          ${Adornment} {\n            padding: 0.75rem 1.25rem;\n          }\n        `\n      case THEME_SIZE.LG:\n        return css`\n          height: 2.25rem;\n          ${Adornment} {\n            padding: 0.875rem 1.625rem;\n          }\n        `\n      default:\n        return css`\n          height: 1.875rem;\n          ${Adornment} {\n            padding: 0.75rem 1.25rem;\n          }\n        `\n    }\n  }}\n`\nconst withAdornmentStyles = css`\n  ${({ adornments }) => {\n    return (\n      adornments &&\n      css`\n        ${adornments.startAdornment &&\n        css`\n          border-bottom-left-radius: 0;\n          border-top-left-radius: 0;\n        `}\n        ${adornments.endAdornment &&\n        css`\n          border-bottom-right-radius: 0;\n          border-top-right-radius: 0;\n        `}\n      `\n    )\n  }}\n`\n\nconst StyledInput = styled.input.attrs((props) => ({\n  'aria-label': props.name,\n  autoComplete: 'off',\n  autoFocus: false\n}))`\n  border: 1px solid;\n  border-left-width: ${({ required, adornments }) =>\n    required === true && !adornments.startAdornment && ' 0.5rem'};\n  border-radius: 0.25rem;\n  font-size: 0.75rem;\n  height: 100%;\n  outline: none;\n  padding: 0 0.625rem;\n  width: 100%;\n\n  &:focus {\n    border-color: ${({ theme }) => (theme ? theme.COLOUR.primary : '#245EE5')};\n  }\n  ::placeholder {\n    color: ${({ theme }) => colourProvider(theme, 'danger')};\n    opacity: 1;\n  }\n\n  ${withAdornmentStyles}\n`\n\nconst Wrapper = styled.div`\n  width: 100%;\n\n  ${({ decoration, readOnly, theme }) => {\n    return css`\n      ${StyledMessage} {\n        color: ${decoration === InputDecorationTypes.DEFAULT ||\n        decoration === InputDecorationTypes.WARNING ||\n        decoration === InputDecorationTypes.READONLY\n          ? colourProvider(theme, 'dark')\n          : colourProvider(theme, decoration)};\n      }\n\n      ${StyledInput},\n      ${Adornment} {\n        border-color: ${decoration !== InputDecorationTypes.DEFAULT\n          ? colourProvider(theme, decoration)\n          : colourProvider(theme, 'dark')};\n        ${decoration === InputDecorationTypes.READONLY ||\n        (readOnly === true &&\n          css`\n            background: transparent;\n            pointer-events: none;\n          `)}\n      }\n      ${Adornment} {\n        background-color: ${colourProvider(theme, decoration)};\n      }\n    `\n  }}\n`\n\nInput.propTypes = {\n  adornments: shape({\n    startAdornment: node,\n    endAdornment: node\n  }),\n  errors: object.isRequired,\n  label: string,\n  name: string.isRequired,\n  placeholder: string,\n  register: func.isRequired,\n  type: oneOf(arrayOfValues(InputTypes))\n}\n\nInput.defaultProps = {\n  decoration: 'default',\n  type: InputTypes.TEXT,\n  size: THEME_SIZE.MD\n}\n"],"file":"input.js"}