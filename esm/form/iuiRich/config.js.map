{"version":3,"sources":["../../../components/form/iuiRich/config.js"],"names":["React","styled","css","BLOCK_TYPES","label","style","INLINE_STYLES","BlockStyleControls","props","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","map","type","onToggle","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","styleMap","CODE","backgroundColor","fontFamily","fontSize","padding","getBlockStyle","block","StyleButton","active","handleToggle","e","preventDefault","StyledRichButton","span"],"mappings":"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","sourcesContent":["// React\nimport React from 'react'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const BLOCK_TYPES = [\n  { label: 'H1', style: 'header-one' },\n  { label: 'H2', style: 'header-two' },\n  { label: 'H3', style: 'header-three' },\n  { label: 'H4', style: 'header-four' },\n  { label: 'H5', style: 'header-five' },\n  { label: 'H6', style: 'header-six' },\n  { label: 'Blockquote', style: 'blockquote' },\n  { label: 'UL', style: 'unordered-list-item' },\n  { label: 'OL', style: 'ordered-list-item' },\n  { label: 'Code Block', style: 'code-block' }\n]\nexport const INLINE_STYLES = [\n  { label: 'Bold', style: 'BOLD' },\n  { label: 'Italic', style: 'ITALIC' },\n  { label: 'Underline', style: 'UNDERLINE' }\n]\n\nexport const BlockStyleControls = (props) => {\n  const { editorState } = props\n  const selection = editorState.getSelection()\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType()\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map((type) => (\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport const InlineStyleControls = (props) => {\n  const currentStyle = props.editorState.getCurrentInlineStyle()\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map((type) => (\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  )\n}\nexport const styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2\n  }\n}\nexport const getBlockStyle = (block) => {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote'\n    default:\n      return null\n  }\n}\nconst StyleButton = ({ active, label, onToggle, style }) => {\n  const handleToggle = (e) => {\n    e.preventDefault()\n    onToggle(style)\n  }\n\n  return (\n    <StyledRichButton active={active} onMouseDown={handleToggle}>\n      {label}\n    </StyledRichButton>\n  )\n}\nconst StyledRichButton = styled.span`\n  cursor: pointer;\n  margin: 0 0.5rem;\n  ${({ active }) =>\n    active &&\n    css`\n      color: red;\n    `}\n`\n"],"file":"config.js"}