{"version":3,"sources":["../../../../components/organisms/bar/components/toggle.js"],"names":["React","bool","func","string","ChevronRightIcon","BarConfig","styled","css","BarToggle","barWidth","onClick","open","placement","OpenButton","div","theme","BAR","transitionDuration","transitionTiming","place","PLACEMENT","LEFT","RIGHT","background","propTypes","isRequired","defaultProps"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,SAAT,QAA0B,UAA1B,C,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA4C;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACnE,sBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,KAAK,EAAEH;AAJT,kBAKE,oBAAC,gBAAD,OALF,CADF;AASD,CAVM;AAAMD,S;AAYb,IAAMK,UAAU,GAAGP,MAAM,CAACQ,GAAV,4bAMS;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,GAAN,CAAUC,kBAAzB;AAAA,CANT,EAQgB;AAAA,MAAGF,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,GAAN,CAAUE,gBAAzB;AAAA,CARhB,EAaY;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,GAAN,CAAUC,kBAAzB;AAAA,CAbZ,EAeZ,iBAAc;AAAA,MAAXN,IAAW,SAAXA,IAAW;AACd,SAAOJ,GAAP,oJAGwBI,IAAI,GAAG,KAAH,GAAW,GAHvC;AAMD,CAtBa,EAwBZ;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,MAAcD,IAAd,SAAcA,IAAd;AAAA,MAAoBQ,KAApB,SAAoBA,KAApB;AAAA,SACA,CAACP,SAAS,KAAKP,SAAS,CAACe,SAAV,CAAoBC,IAAlC,IACCT,SAAS,KAAKP,SAAS,CAACe,SAAV,CAAoBE,KADpC,KAEAf,GAFA,iPAGqB;AAAA,QAAGQ,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACC,GAAN,CAAUO,UAAzB;AAAA,GAHrB,EAIeX,SAJf,EAKkBA,SALlB,EAQIA,SARJ,EAQkBD,IAAI,GAAGQ,KAAK,GAAG,KAAX,GAAmB,MARzC,CADA;AAAA,CAxBY,CAAhB;AAqCAX,SAAS,CAACgB,SAAV,GAAsB;AACpBd,EAAAA,OAAO,EAAER,IAAI,CAACuB,UADM;AAEpBd,EAAAA,IAAI,EAAEV,IAAI,CAACwB,UAFS;AAGpBb,EAAAA,SAAS,EAAET;AAHS,CAAtB;AAMAK,SAAS,CAACkB,YAAV,GAAyB;AACvBd,EAAAA,SAAS,EAAE;AADY,CAAzB","sourcesContent":["/**\n * Components - Organisms - Bar - Components - Toggle\n */\n\n// React\nimport React from 'react'\nimport { bool, func, string } from 'prop-types'\n\n// UI\nimport { ChevronRightIcon } from '../../../'\nimport { BarConfig } from './config'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const BarToggle = ({ barWidth, onClick, open, placement }) => {\n  return (\n    <OpenButton\n      onClick={onClick}\n      open={open}\n      placement={placement}\n      place={barWidth}>\n      <ChevronRightIcon />\n    </OpenButton>\n  )\n}\n\nconst OpenButton = styled.div`\n  align-items: center;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  display: flex;\n  position: fixed;\n  transition-duration: ${({ theme }) => theme.BAR.transitionDuration};\n  transition-property: left, opacity, right, width, transition;\n  transition-timing-function: ${({ theme }) => theme.BAR.transitionTiming};\n  z-index: 10;\n  svg {\n    right: 0.2rem;\n    position: absolute;\n    transition: transform ${({ theme }) => theme.BAR.transitionDuration} ease;\n  }\n  ${({ open }) => {\n    return css`\n      svg,\n      ._ {\n        transform: rotate(${open ? '180' : '0'}deg);\n      }\n    `\n  }}\n\n  ${({ placement, open, place }) =>\n    (placement === BarConfig.PLACEMENT.LEFT ||\n      placement === BarConfig.PLACEMENT.RIGHT) &&\n    css`\n      background-color:${({ theme }) => theme.BAR.background};\n      border-top-${placement}-radius: 0;\n      border-bottom-${placement}-radius: 0;\n      width: 1.5rem;\n      height: 3rem;\n      ${placement}: ${open ? place + 'rem' : '1rem'};\n    `}\n`\n\nBarToggle.propTypes = {\n  onClick: func.isRequired,\n  open: bool.isRequired,\n  placement: string\n}\n\nBarToggle.defaultProps = {\n  placement: 'left'\n}\n"],"file":"toggle.js"}