{"version":3,"sources":["../../../../../components/organisms/messaging/components/list/index.js"],"names":["React","memo","useEffect","useRef","useState","array","AutoSizer","CellMeasurer","CellMeasurerCache","List","DateDiff","Message","MessageNames","MessagingSubscriber","MessagingActions","useComponentCommunication","styled","css","renderMessage","messages","cache","config","index","parent","key","style","type","cacheConfig","fixedWidth","defaultHeight","MessageList","initialMessages","onMessageRecieved","listRef","widthRef","heightRef","Messages","setMessages","setcache","i","length","current","Date","time","previous","diff","inDays","headerTime","slice","scrollToBottom","window","requestAnimationFrame","scrollToRow","onRecieve","payload","newMessagesArray","onRenewMessages","onAction","action","NEW_MESSAGES","data","RENEW_MESSAGES","dependencies","messageName","Messaging","MESSAGING_ACTION","subscriber","height","width","padding","rowHeight","e","MessageContainer","div","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * Messaging/List\n */\n\n// React\nimport React, { memo, useEffect, useRef, useState } from 'react'\nimport { array } from 'prop-types'\n\n// React Virtualised\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List\n} from 'react-virtualized'\n\n// UI\nimport {\n  DateDiff,\n  Message,\n  MessageNames,\n  MessagingSubscriber,\n  MessagingActions,\n  useComponentCommunication\n} from '../../../../'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nconst renderMessage = (\n  { index, parent, key, style },\n  messages,\n  cache,\n  config\n) => {\n  return (\n    <CellMeasurer\n      cache={cache}\n      key={index}\n      parent={parent}\n      columnIndex={0}\n      rowIndex={index}>\n      <MessageContainer type={messages[index].type} style={style}>\n        <Message\n          config={config}\n          message={messages[index]}\n          prevType={messages[index].type}\n          type={messages[index].type}\n        />\n      </MessageContainer>\n    </CellMeasurer>\n  )\n}\n\nconst cacheConfig = { fixedWidth: true, defaultHeight: 50 }\n\nexport const MessageList = memo(\n  ({ initialMessages, onMessageRecieved, config }) => {\n    const listRef = useRef(null)\n    const widthRef = useRef(null)\n    const heightRef = useRef(null)\n    const [Messages, setMessages] = useState(initialMessages)\n\n    const [cache, setcache] = useState(new CellMeasurerCache(cacheConfig))\n\n    for (let i = 0; i < Messages.length; i++) {\n      if (i !== 0) {\n        const current = new Date(Messages[i].time)\n        const previous = new Date(Messages[i - 1].time)\n        const diff = DateDiff.inDays(previous, current)\n        if (diff > 0) {\n          Messages[i].headerTime = Messages[i].time.slice(0, 14)\n        }\n      } else {\n        Messages[i].headerTime = Messages[i].time.slice(0, 14)\n      }\n    }\n    const scrollToBottom = () => {\n      window &&\n        window.requestAnimationFrame(() => {\n          listRef.current && listRef.current.scrollToRow(Messages.length)\n        })\n    }\n\n    const onRecieve = (payload) => {\n      const newMessagesArray = [...Messages, ...payload]\n      setMessages(() => [...newMessagesArray])\n      scrollToBottom()\n    }\n\n    const onRenewMessages = (messages) => {\n      setMessages(() => [...messages])\n      window &&\n        window.requestAnimationFrame(() => {\n          setcache(() => new CellMeasurerCache(cacheConfig))\n          listRef.current && listRef.current.scrollToRow(Messages.length)\n        })\n    }\n\n    useEffect(() => {\n      scrollToBottom()\n      return () => {}\n    }, [Messages.length])\n\n    const onAction = (payload) => {\n      switch (payload.action) {\n        case MessagingActions.NEW_MESSAGES:\n          onRecieve(payload.data)\n          break\n        case MessagingActions.RENEW_MESSAGES:\n          onRenewMessages(payload.data)\n          break\n\n        default:\n          break\n      }\n      onMessageRecieved(payload.data)\n    }\n\n    useComponentCommunication({\n      dependencies: [Messages.length],\n      messageName: MessageNames.Messaging.MESSAGING_ACTION,\n      onRecieve: onAction,\n      subscriber: MessagingSubscriber\n    })\n\n    return (\n      <AutoSizer>\n        {({ height, width }) => {\n          if (width !== widthRef.current || height !== heightRef.current) {\n            widthRef.current = width\n            heightRef.current = height\n            window &&\n              window.requestAnimationFrame(() => {\n                setcache(new CellMeasurerCache(cacheConfig))\n              })\n          }\n          return (\n            <List\n              style={{ padding: '0.5rem 0' }}\n              deferredMeasurementCache={cache}\n              height={height}\n              overscanRowCount={10}\n              ref={listRef}\n              rowCount={Messages.length}\n              rowHeight={cache.rowHeight}\n              rowRenderer={(e) => renderMessage(e, Messages, cache, config)}\n              scrollToIndex={Messages.length - 1}\n              width={width}\n            />\n          )\n        }}\n      </AutoSizer>\n    )\n  },\n  () => true\n)\nconst MessageContainer = styled.div`\n  ${({ type }) =>\n    type === 'in'\n      ? css`\n          padding-right: 0.5rem;\n        `\n      : css`\n          padding-left: 0.5rem;\n        `}\n`\nMessageList.propTypes = {\n  initialMessages: array.isRequired\n}\n"],"file":"index.js"}