{"version":3,"sources":["../../../../../components/organisms/messaging/components/message/index.js"],"names":["React","memo","useState","object","string","styled","css","Avatar","MessageBase","MessageNames","MessagingActions","MessagingCommunicationService","ReplyIcon","ShareIcon","Message","config","message","prevType","type","props","avatar","from","handleReplyClick","send","name","Messaging","MESSAGING_ACTION","payload","action","REPLY_MESSAGE","data","hovered","sethovered","sideActions","hasReply","hasForward","hasText","plainText","content","blocks","map","block","text","trim","join","length","handleMouseOver","hasMenu","handleMouseLeave","headerTime","TimeHeader","div","MESSAGING","theme","dateDividerColour","dateBadgeBackground","containerBackground","IconWrapper","forwardAndReplyIconsColour","SideActionsWrapper","RowWrapper","hasTimeHeader","AvatarWrapper","avatarBackground","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * Messaging/Message\n */\n\n// React\nimport React, { memo, useState } from 'react'\nimport { object, string } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport {\n  Avatar,\n  MessageBase,\n  MessageNames,\n  MessagingActions,\n  MessagingCommunicationService\n} from '../../../../'\n\nimport { ReplyIcon } from './replyIcon'\nimport { ShareIcon } from './shareIcon'\n\nexport const Message = memo(\n  ({ config, message, prevType, type, ...props }) => {\n    const avatar = message.avatar ? (\n      <Avatar size=\"xxs\" src={message.avatar} />\n    ) : (\n      <Avatar size=\"xxs\" content={message.from[0]} />\n    )\n    const handleReplyClick = () => {\n      MessagingCommunicationService.send({\n        name: MessageNames.Messaging.MESSAGING_ACTION,\n        payload: {\n          action: MessagingActions.REPLY_MESSAGE,\n          data: message\n        }\n      })\n    }\n\n    const [hovered, sethovered] = useState(false)\n    const sideActions = (\n      <SideActionsWrapper>\n        <AvatarWrapper>{avatar}</AvatarWrapper>\n        {config.hasReply && (\n          <IconWrapper onClick={handleReplyClick} title=\"reply\">\n            <ReplyIcon />\n          </IconWrapper>\n        )}\n        {config.hasForward && (\n          <IconWrapper title=\"share\">\n            <ShareIcon />\n          </IconWrapper>\n        )}\n      </SideActionsWrapper>\n    )\n    const hasText = () => {\n      let plainText = ''\n      if (message.content.blocks) {\n        plainText = message.content.blocks\n          .map((block) => (!block.text.trim() && '\\n') || block.text)\n          .join('\\n')\n      } else {\n        plainText = message.content\n      }\n      if (plainText.length > 1) {\n        return true\n      }\n      return false\n    }\n    const handleMouseOver = () => {\n      config.hasMenu && sethovered(true)\n    }\n    const handleMouseLeave = () => {\n      config.hasMenu && sethovered(false)\n    }\n    return (\n      <RowWrapper\n        hasTimeHeader={message.headerTime}\n        onMouseOver={handleMouseOver}\n        onMouseLeave={handleMouseLeave}>\n        {message.headerTime && (\n          <TimeHeader>\n            <div>\n              <span>{message.headerTime}</span>\n              <p />\n            </div>\n          </TimeHeader>\n        )}\n        {type === 'in' && sideActions}\n        <MessageBase\n          hovered={hovered}\n          prevType={prevType}\n          hasText={hasText()}\n          hasMenu={config.hasMenu}\n          {...message}\n          {...props}\n        />\n        {type === 'out' && sideActions}\n      </RowWrapper>\n    )\n  },\n  () => true\n)\nconst TimeHeader = styled.div`\n  position: absolute;\n  margin-top: -0.1rem;\n  text-align: center;\n  width: 100%;\n  background: ${({ theme: { MESSAGING } }) =>\n    MESSAGING.dateDividerColour || '#0000'};\n  height: 1px;\n  div {\n    background: white;\n    border: 1px solid;\n    border-radius: 100px;\n    display: flex;\n    font-size: 0.75rem;\n    height: 19px;\n    left: calc(50% - 50px);\n    padding: 0.1rem 0.5rem;\n    place-content: center;\n    position: relative;\n    top: -0.7rem;\n    width: 110px;\n    span {\n      line-height: 12px;\n      padding-top: 1px;\n      position: absolute;\n      z-index: 1;\n    }\n    p {\n      background: ${({ theme: { MESSAGING } }) =>\n        MESSAGING.dateBadgeBackground || MESSAGING.containerBackground};\n      border-radius: 15px;\n      bottom: 0;\n      left: 0;\n      margin: 0;\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n  }\n`\nconst IconWrapper = styled.div`\n  cursor: pointer;\n  padding: 0.25rem 0;\n  text-align: center;\n  width: 100%;\n  path {\n    fill: ${({ theme: { MESSAGING } }) => MESSAGING.forwardAndReplyIconsColour};\n  }\n`\n\nconst SideActionsWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst RowWrapper = styled.div`\n  display: flex;\n  position: relative;\n  ${({ hasTimeHeader }) =>\n    hasTimeHeader &&\n    css`\n      margin-top: 1rem;\n    `}\n`\nconst AvatarWrapper = styled.div`\n  margin: 0 0.5rem;\n  margin-bottom: 0.5rem;\n  margin-top: 0.5rem;\n  div {\n    background: ${({ theme: { MESSAGING } }) => MESSAGING.avatarBackground};\n  }\n`\nMessage.propTypes = {\n  message: object.isRequired,\n  prevType: string.isRequired\n}\n"],"file":"index.js"}