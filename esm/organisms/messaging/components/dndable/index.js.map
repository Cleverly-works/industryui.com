{"version":3,"sources":["../../../../../components/organisms/messaging/components/dndable/index.js"],"names":["React","useDropzone","styled","DragAndDropable","children","onFileDrop","onHover","onLeave","onDragEnter","onDragLeave","onDrop","e","getRootProps","isDragAccept","isDragActive","isDragReject","Container","div","MESSAGING","theme","scrollBarColour","scrollThumbColour"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAgD;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAnCC,UAAmC,QAAnCA,UAAmC;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC7E,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,OAAO;AACR,GAFD;;AAGA,MAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,OAAO;AACR,GAFD;;AAGA,MAAMG,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAAO;AACpBN,IAAAA,UAAU,CAACM,CAAD,CAAV;AACD,GAFD;;AAP6E,qBAgBzEV,WAAW,CAAC;AACdS,IAAAA,MAAM,EAANA,MADc;AAEdF,IAAAA,WAAW,EAAXA,WAFc;AAGdC,IAAAA,WAAW,EAAXA;AAHc,GAAD,CAhB8D;AAAA,MAY3EG,YAZ2E,gBAY3EA,YAZ2E;AAAA,MAa3EC,YAb2E,gBAa3EA,YAb2E;AAAA,MAc3EC,YAd2E,gBAc3EA,YAd2E;AAAA,MAe3EC,YAf2E,gBAe3EA,YAf2E;;AAsB7E,sBACE,oBAAC,SAAD,EAAeH,YAAY,CAAC;AAAEE,IAAAA,YAAY,EAAZA,YAAF;AAAgBD,IAAAA,YAAY,EAAZA,YAAhB;AAA8BE,IAAAA,YAAY,EAAZA;AAA9B,GAAD,CAA3B,EACGX,QADH,CADF;AAKD,CA3BM;AAAMD,e;AA4Bb,IAAMa,SAAS,GAAGd,MAAM,CAACe,GAAV,iVAOW;AAAA,MAAYC,SAAZ,SAAGC,KAAH,CAAYD,SAAZ;AAAA,SAClBA,SAAS,CAACE,eADQ;AAAA,CAPX,EAaW;AAAA,MAAYF,SAAZ,SAAGC,KAAH,CAAYD,SAAZ;AAAA,SAClBA,SAAS,CAACG,iBADQ;AAAA,CAbX,CAAf","sourcesContent":["// React\nimport React from 'react'\n\n// React Dropzone\nimport { useDropzone } from 'react-dropzone'\n\n// Style\nimport styled from 'styled-components'\n\nexport const DragAndDropable = ({ children, onFileDrop, onHover, onLeave }) => {\n  const onDragEnter = () => {\n    onHover()\n  }\n  const onDragLeave = () => {\n    onLeave()\n  }\n  const onDrop = (e) => {\n    onFileDrop(e)\n  }\n\n  const {\n    getRootProps,\n    isDragAccept,\n    isDragActive,\n    isDragReject\n  } = useDropzone({\n    onDrop,\n    onDragEnter,\n    onDragLeave\n  })\n\n  return (\n    <Container {...getRootProps({ isDragActive, isDragAccept, isDragReject })}>\n      {children}\n    </Container>\n  )\n}\nconst Container = styled.div`\n  overflow: hidden;\n  position: relative;\n  outline: none;\n  * {\n    &::-webkit-scrollbar {\n      width: 0.25rem;\n      background-color: ${({ theme: { MESSAGING } }) =>\n        MESSAGING.scrollBarColour};\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 10px;\n      background-color: ${({ theme: { MESSAGING } }) =>\n        MESSAGING.scrollThumbColour};\n    }\n  }\n`\n"],"file":"index.js"}