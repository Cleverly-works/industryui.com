{"version":3,"sources":["../../../../components/organisms/calendar/fullCalendar/calendarWrapper.js"],"names":["React","useEffect","useState","dynamic","FullCalendar","CalendarWrapper","props","calendarLoaded","setCalendarLoaded","modules","calendar","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","render","Calendar","plugins","Object","values","forwardedRef","ssr","showCalendar"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,IAAIC,YAAJ;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA,kBACIJ,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,MACjCK,cADiC;AAAA,MACjBC,iBADiB;;AAGxCP,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,YAAY,GAAGD,OAAO,CAAC;AACrBM,MAAAA,OAAO,EAAE;AAAA,eAAO;AACdC,UAAAA,QAAQ,EAAE,OAAO,qBAAP,CADI;AAEdC,UAAAA,aAAa,EAAE,OAAO,uBAAP,CAFD;AAGdC,UAAAA,cAAc,EAAE,OAAO,wBAAP,CAHF;AAIdC,UAAAA,iBAAiB,EAAE,OAAO,2BAAP,CAJL;AAKdC,UAAAA,UAAU,EAAE,OAAO,oBAAP;AALE,SAAP;AAAA,OADY;AAQrBC,MAAAA,MAAM,EAAE,gBAACT,KAAD;AAAA,YAAoBU,QAApB,QAAUN,QAAV;AAAA,YAAiCO,OAAjC;;AAAA,4BACN,oBAAC,QAAD;AACE,UAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcF,OAAd,CADX;AAEE,UAAA,GAAG,EAAEX,KAAK,CAACc;AAFb,WAGMd,KAHN,EADM;AAAA,OARa;AAerBe,MAAAA,GAAG,EAAE;AAfgB,KAAD,CAAtB;AAkBAb,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,MAAMc,YAAY,GAAG,SAAfA,YAAe,CAAChB,KAAD,EAAW;AAC9B,QAAI,CAACC,cAAL,EAAqB,oBAAO,+CAAP;AAErB,wBAAO,oBAAC,YAAD,EAAkBD,KAAlB,CAAP;AACD,GAJD;;AAMA,sBAAO,iCAAMgB,YAAY,CAAChB,KAAD,CAAlB,CAAP;AACD,CAhCM;AAAMD,e","sourcesContent":["/**\n * Components - Organisms - Calendar - Full Calendar - Wrapper\n */\n\n// React\nimport React, { useEffect, useState } from 'react'\n\n// Next\nimport dynamic from 'next/dynamic'\n\nlet FullCalendar\n\nexport const CalendarWrapper = (props) => {\n  const [calendarLoaded, setCalendarLoaded] = useState(false)\n\n  useEffect(() => {\n    FullCalendar = dynamic({\n      modules: () => ({\n        calendar: import('@fullcalendar/react'),\n        dayGridPlugin: import('@fullcalendar/daygrid'),\n        timeGridPlugin: import('@fullcalendar/timegrid'),\n        interactionPlugin: import('@fullcalendar/interaction'),\n        listPlugin: import('@fullcalendar/list')\n      }),\n      render: (props, { calendar: Calendar, ...plugins }) => (\n        <Calendar\n          plugins={Object.values(plugins)}\n          ref={props.forwardedRef}\n          {...props}\n        />\n      ),\n      ssr: false\n    })\n\n    setCalendarLoaded(true)\n  }, [])\n\n  const showCalendar = (props) => {\n    if (!calendarLoaded) return <div>Loading ...</div>\n\n    return <FullCalendar {...props} />\n  }\n\n  return <div>{showCalendar(props)}</div>\n}\n"],"file":"calendarWrapper.js"}