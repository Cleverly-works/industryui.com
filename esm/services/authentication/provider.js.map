{"version":3,"sources":["../../../components/services/authentication/provider.js"],"names":["React","useContext","useEffect","useState","bcrypt","Router","axios","ConfigContext","decodeToken","UserContext","validateToken","UserProvider","children","accessToken","setAccessToken","user","setUser","isLoading","setIsLoading","apiConfig","jwtConfig","bearerToken","window","localStorage","getItem","tokenData","e","removeItem","signIn","provider","username","password","callback","post","authURL","email","headers","data","token","error","response","Error","isAuthed","setItem","push","registerContext","nameFirst","nameLast","marketing","birthday","signOut","hashPassword","hashSync","authorise","condition"],"mappings":"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","sourcesContent":["/**\n * Authentication - Providers - User\n * Provides context, state and hooks into managing a user\n *\n * @see https://reacttricks.com/sharing-global-data-in-next-with-custom-app-and-usecontext-hook/\n */\n\n// React\nimport React, { useContext, useEffect, useState } from 'react'\n\n// Bcrypt\nimport bcrypt from 'bcryptjs'\n\n// Next\nimport Router from 'next/router'\n\n// Axios\nimport axios from 'axios'\n\n// UI\nimport { ConfigContext, decodeToken, UserContext, validateToken } from '../../'\n\nexport const UserProvider = ({ children }) => {\n  const [accessToken, setAccessToken] = useState(null)\n  const [user, setUser] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const { apiConfig, jwtConfig } = useContext(ConfigContext)\n\n  useEffect(() => {\n    const bearerToken = window.localStorage.getItem('bearerToken')\n\n    if (bearerToken) {\n      try {\n        const tokenData = validateToken(bearerToken, jwtConfig)\n        if (tokenData.user) {\n          setUser(tokenData.user)\n        }\n      } catch (e) {\n        // Invalid token\n        window.localStorage.removeItem('bearerToken')\n        setAccessToken(null)\n        setUser(null)\n      }\n\n      setIsLoading(false)\n    } else {\n      setIsLoading(false)\n    }\n  }, [])\n\n  const signIn = async (provider, username, password, callback) => {\n    let user, token\n    try {\n      const { data } = await axios.post(\n        `${apiConfig.authURL}/login`,\n        { email: username, password },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            ...apiConfig.headers\n          }\n        }\n      )\n      token = data.token\n      const tokenData = decodeToken(token)\n      user = tokenData.user\n    } catch (err) {\n      const { error } = err.response.data\n      callback(new Error(error))\n    }\n\n    const isAuthed = user && token\n    if (isAuthed) {\n      setUser(user)\n      window.localStorage.setItem('bearerToken', token)\n      setAccessToken(token)\n      Router.push('/dashboard')\n    }\n  }\n  const registerContext = async (\n    nameFirst,\n    nameLast,\n    email,\n    password,\n    marketing,\n    birthday,\n    callback\n  ) => {\n    let user, token\n\n    try {\n      const { data } = await axios.post(\n        `${apiConfig.authURL}/register`,\n        {\n          nameFirst,\n          nameLast,\n          email,\n          password,\n          marketing,\n          birthday\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            ...apiConfig.headers\n          }\n        }\n      )\n      token = data.token\n      const tokenData = decodeToken(token)\n      user = tokenData.user\n    } catch (err) {\n      const { error } = err.response.data\n      callback(new Error(error))\n    }\n\n    const isAuthed = user && token\n    if (isAuthed) {\n      setUser(user)\n      window.localStorage.setItem('bearerToken', token)\n      setAccessToken(token)\n      Router.push('/dashboard')\n    }\n  }\n\n  const signOut = async () => {\n    window.localStorage.removeItem('bearerToken')\n    window.localStorage.removeItem('active-notifications')\n\n    setAccessToken(null)\n    setUser(null)\n  }\n\n  const hashPassword = (password) => {\n    return bcrypt.hashSync(password, 10)\n  }\n\n  // TODO - remove after converting all pages to new user roles\n  const authorise = (condition) => {\n    if (!condition(user)) {\n      Router.push('/account/sign-in')\n      return false\n    }\n    return true\n  }\n\n  return (\n    !isLoading && (\n      <UserContext.Provider\n        value={{\n          accessToken,\n          authorise,\n          hashPassword,\n          signIn,\n          registerContext,\n          signOut,\n          user\n        }}>\n        {children}\n      </UserContext.Provider>\n    )\n  )\n}\n"],"file":"provider.js"}