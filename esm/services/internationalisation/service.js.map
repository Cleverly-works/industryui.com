{"version":3,"sources":["../../../components/services/internationalisation/service.js"],"names":["useContext","ConfigContext","isLocale","locales","tested","some","locale","GetInitialLocale","defaultLocale","localSetting","window","localStorage","getItem","navigator","language","split","browserSetting"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,SAASC,aAAT,QAA8B,QAA9B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyB;AAAA,MAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC/C,SAAOD,OAAO,CAACE,IAAR,CAAa,UAACC,MAAD;AAAA,WAAYA,MAAM,KAAKF,MAAvB;AAAA,GAAb,CAAP;AACD,CAFM;AAIP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,oBACVP,UAAU,CAACC,aAAD,CADA;AAAA,MAC5BO,aAD4B,eAC5BA,aAD4B;;AAGpC,MAAMC,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CAArB;;AAEA,MAAIH,YAAY,IAAIP,QAAQ,CAACO,YAAD,CAA5B,EAA4C;AAC1C,WAAOA,YAAP;AACD;;AAPmC,8BASXI,SAAS,CAACC,QAAV,CAAmBC,KAAnB,CAAyB,GAAzB,CATW;AAAA;AAAA,MAS7BC,cAT6B;;AAWpC,MAAId,QAAQ,CAACc,cAAD,CAAZ,EAA8B;AAC5B,WAAOA,cAAP;AACD;;AAED,SAAOR,aAAP;AACD,CAhBM","sourcesContent":["/**\n * Get Initial Locale\n * Gets the users locale string from locale storage\n *\n * @todo the User Provider should also push down a user saved locale\n * @todo we have a localstorage hook - use it\n */\n// React\nimport { useContext } from 'react'\n\n// UI\nimport { ConfigContext } from '../../'\n\nexport const isLocale = ({ locales, tested }) => {\n  return locales.some((locale) => locale === tested)\n}\n\nexport const GetInitialLocale = () => {\n  const { defaultLocale } = useContext(ConfigContext)\n\n  const localSetting = window.localStorage.getItem('locale')\n\n  if (localSetting && isLocale(localSetting)) {\n    return localSetting\n  }\n\n  const [browserSetting] = navigator.language.split('-')\n\n  if (isLocale(browserSetting)) {\n    return browserSetting\n  }\n\n  return defaultLocale\n}\n"],"file":"service.js"}