{"version":3,"sources":["../../../components/molecules/videoPlayer/videoPlayer.js"],"names":["React","useRef","useState","any","string","styled","css","PlayCircleIcon","fullScreen","FullScreenIcon","ResizeDetector","VideoPlayer","src","poster","className","videoProps","videoType","isPlaying","setIsPlaying","width","setWidth","videoRef","played","handlePlayPause","current","play","pause","state","handlePaused","handlePlayed","handleFullScreen","requestFullscreen","handleResize","clientWidth","iconSize","Overlay","div","gap","show","VideoPlayerWrapper","Video","video","prototypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * Components - Molecules - Video Player\n */\n\n// React\nimport React, { useRef, useState } from 'react'\nimport { any, string } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport {\n  PlayCircleIcon,\n  fullScreen,\n  FullScreenIcon,\n  ResizeDetector\n} from '../../'\n\nexport const VideoPlayer = ({\n  src,\n  poster,\n  className,\n  videoProps,\n  videoType\n}) => {\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [width, setWidth] = useState(0)\n  const videoRef = useRef()\n  const played = useRef(false)\n\n  const handlePlayPause = () => {\n    isPlaying === false ? videoRef.current.play() : videoRef.current.pause()\n    setIsPlaying((state) => !state)\n  }\n\n  const handlePaused = () => {\n    setIsPlaying(false)\n  }\n\n  const handlePlayed = () => (played.current = true)\n\n  const handleFullScreen = () => {\n    videoRef.current.play()\n    setIsPlaying(true)\n    fullScreen.requestFullscreen(videoRef.current)\n  }\n\n  const handleResize = ({ width }) => {\n    if (videoRef.current) {\n      const width = videoRef.current.clientWidth\n      setWidth(width)\n    }\n  }\n\n  const iconSize = width ? width / 6 : 40\n\n  return (\n    <VideoPlayerWrapper className={className}>\n      <ResizeDetector onResize={handleResize} />\n\n      <Overlay\n        show={!isPlaying}\n        poster={played.current ? null : poster}\n        gap={iconSize / 3}>\n        <PlayCircleIcon size={iconSize} hoverColour onClick={handlePlayPause} />\n        <FullScreenIcon\n          size={iconSize}\n          hoverColour\n          onClick={handleFullScreen}\n        />\n      </Overlay>\n\n      <Video\n        ref={videoRef}\n        controls\n        onPause={handlePaused}\n        onPlay={handlePlayed}\n        {...videoProps}>\n        <source src={src} type={videoType || 'video/mp4'} />\n        Your browser does not support the video tag.\n      </Video>\n    </VideoPlayerWrapper>\n  )\n}\n\nconst Overlay = styled.div`\n  align-items: center;\n  background: rgba(0, 0, 0, 0.3);\n  background-image: ${({ poster }) =>\n    poster &&\n    ` linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)), url(${poster})`};\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 0.5rem;\n  bottom: 7px;\n  display: flex;\n  gap: ${({ gap }) => gap + 'px'};\n  justify-content: center;\n  left: 0;\n  overflow: hidden;\n  position: absolute;\n  right: 0;\n  top: 0;\n  transition: opacity 0.3s ease;\n  z-index: 1;\n  ${({ show }) =>\n    show\n      ? css`\n          opacity: 1;\n        `\n      : css`\n          opacity: 0;\n          pointer-events: none;\n        `}\n`\n\nconst VideoPlayerWrapper = styled.div`\n  border-radius: 0.5rem;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n`\n\nconst Video = styled.video`\n  border-radius: 0.5rem;\n  height: 100%;\n  outline: none;\n  width: 100%;\n`\n\nVideoPlayer.prototypes = {\n  className: string,\n  poster: string,\n  src: string.isRequired,\n  videoProps: any,\n  videoType: string\n}\n"],"file":"videoPlayer.js"}