{"version":3,"sources":["../../../../../components/molecules/charts/nivo/lineChart/variables.js"],"names":["shortDate","THEME_COLOUR","lastValue","LINECHART","axisBottom","axisTop","axisRight","format","value","axisBottomDistinct","formatted","legend","bottomLegend","legendOffset","legendPosition","orient","tickSize","tickPadding","tickRotation","axisLeft","axisLeftSymbol","leftLegend","margin","bottom","left","right","showLegend","top","legends","anchor","direction","effects","on","style","itemBackground","itemOpacity","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","symbolSize","symbolShape","symbolBorderColor","pointColor","white","pointSize","pointBorderColor","from","pointBorderWidth","pointLabel","pointLabelYOffset","useMesh","xScale","type","yScale","stacked","min","max"],"mappings":";;;;;;AAAA;AACA;AACA;AAEA;AACA,SAASA,SAAT,QAA0B,gCAA1B,C,CAEA;;AACA,SAASC,YAAT,QAA6B,oCAA7B;AAEA,IAAIC,SAAS,GAAG,IAAhB;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvBC,EAAAA,UAAU,EAAE,sBAAY;AAAA;;AACtB;AACEC,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,SAAS,EAAE,IAFb;AAGEC,MAAAA,MAAM,EAAE,gBAACC,KAAD,EAAW;AACjB,YAAI,KAAI,CAACC,kBAAT,EAA6B;AAC3B,cAAMC,SAAS,GAAGV,SAAS,CAACQ,KAAD,CAA3B;;AACA,cAAIE,SAAS,KAAKR,SAAlB,EAA6B;AAC3BA,YAAAA,SAAS,GAAGQ,SAAZ;AACA,mBAAOA,SAAP;AACD;AACF,SAND,MAMO,OAAOF,KAAP;AACR,OAXH;AAYEG,MAAAA,MAAM,EAAE,KAAKC,YAZf;AAY6B;AAC3BC,MAAAA,YAAY,EAAE,EAbhB;AAcEC,MAAAA,cAAc,EAAE,QAdlB;AAeEC,MAAAA,MAAM,EAAE,QAfV;AAgBEC,MAAAA,QAAQ,EAAE,CAhBZ;AAiBEC,MAAAA,WAAW,EAAE,CAjBf;AAkBEC,MAAAA,YAAY,EAAE;AAlBhB,OAmBK,KAAKd,UAnBV;AAqBD,GAvBsB;AAwBvBe,EAAAA,QAAQ,EAAE,oBAAY;AAAA;;AACpB;AACEZ,MAAAA,MAAM,EAAE,gBAACC,KAAD,EAAW;AACjB,YAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB,iBAAUA,KAAK,GAAG,MAAI,CAACY,cAAb,IAA+BZ,KAAzC;AACtB,OAHH;AAIEG,MAAAA,MAAM,EAAE,KAAKU,UAJf;AAI2B;AACzBR,MAAAA,YAAY,EAAE,CAAC,EALjB;AAMEC,MAAAA,cAAc,EAAE,QANlB;AAOEC,MAAAA,MAAM,EAAE,MAPV;AAQEC,MAAAA,QAAQ,EAAE,CARZ;AASEC,MAAAA,WAAW,EAAE,CATf;AAUEC,MAAAA,YAAY,EAAE;AAVhB,OAWK,KAAKC,QAXV;AAaD,GAtCsB;AAuCvBG,EAAAA,MAAM,EAAE,kBAAY;AAClB,WAAO;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,KAAK,EAAE,KAAKC,UAAL,GAAkB,GAAlB,GAAwB,EAH1B;AAG8B;AACnCC,MAAAA,GAAG,EAAE;AAJA,KAAP;AAMD,GA9CsB;AA+CvBC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,MAAM,EAAE,cADV;AAEEC,IAAAA,SAAS,EAAE,QAFb;AAGEC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,EAAE,EAAE,OADN;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAE,oBADX;AAELC,QAAAA,WAAW,EAAE;AAFR;AAFT,KADO,CAHX;AAYEC,IAAAA,OAAO,EAAE,KAZX;AAaEC,IAAAA,UAAU,EAAE,GAbd;AAcEC,IAAAA,UAAU,EAAE,CAdd;AAeEC,IAAAA,YAAY,EAAE,CAfhB;AAgBEC,IAAAA,aAAa,EAAE,eAhBjB;AAiBEC,IAAAA,SAAS,EAAE,EAjBb;AAkBEC,IAAAA,UAAU,EAAE,EAlBd;AAmBEP,IAAAA,WAAW,EAAE,IAnBf;AAoBEQ,IAAAA,UAAU,EAAE,EApBd;AAqBEC,IAAAA,WAAW,EAAE,QArBf;AAsBEC,IAAAA,iBAAiB,EAAE;AAtBrB,GADO,CA/Cc;AAyEvBC,EAAAA,UAAU,EAAE7C,YAAY,CAAC8C,KAzEF;AA0EvBC,EAAAA,SAAS,EAAE,EA1EY;AA2EvBC,EAAAA,gBAAgB,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GA3EK;AA4EvBC,EAAAA,gBAAgB,EAAE,CA5EK;AA6EvBC,EAAAA,UAAU,EAAE,GA7EW;AA8EvBC,EAAAA,iBAAiB,EAAE,CAAC,EA9EG;AA+EvBC,EAAAA,OAAO,EAAE,IA/Ec;AAgFvBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAhFe;AAiFvBC,EAAAA,MAAM,EAAE,kBAAY;AAClB,WAAO;AACLD,MAAAA,IAAI,EAAE,QADD;AAELE,MAAAA,OAAO,EAAE,CAAC,CAAC,KAAKA,OAFX;AAEoB;AACzBC,MAAAA,GAAG,EAAE,MAHA;AAILC,MAAAA,GAAG,EAAE;AAJA,KAAP;AAMD;AAxFsB,CAAlB","sourcesContent":["/**\n * Charts - Line - Variables\n */\n\n// Date fns\nimport { shortDate } from '../../../../utils/dateFns/date'\n\n// UI\nimport { THEME_COLOUR } from '../../../../theme/variables/colour'\n\nlet lastValue = null\n\nexport const LINECHART = {\n  axisBottom: function () {\n    return {\n      axisTop: null,\n      axisRight: null,\n      format: (value) => {\n        if (this.axisBottomDistinct) {\n          const formatted = shortDate(value)\n          if (formatted !== lastValue) {\n            lastValue = formatted\n            return formatted\n          }\n        } else return value\n      },\n      legend: this.bottomLegend, // string passed as prop\n      legendOffset: 36,\n      legendPosition: 'middle',\n      orient: 'bottom',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      ...this.axisBottom\n    }\n  },\n  axisLeft: function () {\n    return {\n      format: (value) => {\n        if (value % 1 === 0) return `${value + this.axisLeftSymbol || value}`\n      },\n      legend: this.leftLegend, // string passed as prop\n      legendOffset: -50,\n      legendPosition: 'middle',\n      orient: 'left',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      ...this.axisLeft\n    }\n  },\n  margin: function () {\n    return {\n      bottom: 50,\n      left: 60,\n      right: this.showLegend ? 110 : 30, // props context\n      top: 30\n    }\n  },\n  legends: [\n    {\n      anchor: 'bottom-right',\n      direction: 'column',\n      effects: [\n        {\n          on: 'hover',\n          style: {\n            itemBackground: 'rgba(0, 0, 0, .03)',\n            itemOpacity: 1\n          }\n        }\n      ],\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)'\n    }\n  ],\n  pointColor: THEME_COLOUR.white,\n  pointSize: 10,\n  pointBorderColor: { from: 'serieColor' },\n  pointBorderWidth: 2,\n  pointLabel: 'y',\n  pointLabelYOffset: -12,\n  useMesh: true,\n  xScale: { type: 'point' },\n  yScale: function () {\n    return {\n      type: 'linear',\n      stacked: !!this.stacked, // props context\n      min: 'auto',\n      max: 'auto'\n    }\n  }\n}\n"],"file":"variables.js"}