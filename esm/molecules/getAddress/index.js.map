{"version":3,"sources":["../../../components/molecules/getAddress/index.js"],"names":["React","useContext","useRef","useState","func","object","oneOf","number","string","styled","css","Button","Dropdown","FormError","FormField","FormLabel","GetAddressService","InputGroupAddon","Shimmer","ConfigContext","validatorPostCode","THEME_SIZE","GetAddress","errors","label","name","placeholder","register","setValue","size","throttle","validator","GetAddressConfig","Errors","setErrors","IsLoading","setIsLoading","Addresses","setAddresses","ref","InputValueRef","onApiCall","data","response","hasError","addresses","fixedAddresses","fixAddresses","current","click","message","handleInputChange","value","handleSearchClick","getAddresses","apiKey","postCode","callback","callThrottle","handleAddressSelect","address","id","e","target","InputWrapper","div","LoadingWrapper","SM","MD","LG","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Components - Molecules - Get Address\n */\n\n// React\nimport React, { useContext, useRef, useState } from 'react'\nimport { func, object, oneOf, number, string } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport {\n  Button,\n  Dropdown,\n  FormError,\n  FormField,\n  FormLabel,\n  GetAddressService,\n  InputGroupAddon,\n  Shimmer,\n  ConfigContext,\n  validatorPostCode\n} from '../../'\n\nimport { THEME_SIZE } from '../../theme/constants/size'\n\nexport const GetAddress = ({\n  errors,\n  label,\n  name,\n  placeholder,\n  register,\n  setValue,\n  size,\n  throttle,\n  validator\n}) => {\n  const { GetAddressConfig } = useContext(ConfigContext)\n  const [Errors, setErrors] = useState(errors ?? { [name]: null })\n  const [IsLoading, setIsLoading] = useState(false)\n  const [Addresses, setAddresses] = useState([])\n\n  const ref = useRef(null)\n\n  const InputValueRef = useRef('')\n\n  const onApiCall = (data) => {\n    const { response, hasError } = data\n\n    if (!hasError) {\n      const { addresses } = response\n\n      const fixedAddresses = GetAddressService.fixAddresses(addresses)\n\n      setErrors({ [name]: null })\n      setAddresses(fixedAddresses)\n      ref.current.click()\n    } else {\n      setErrors({ [name]: { message: response } })\n    }\n    setIsLoading(false)\n  }\n\n  const handleInputChange = (value) => {\n    InputValueRef.current = value\n  }\n\n  const handleSearchClick = () => {\n    setIsLoading(true)\n    GetAddressService.getAddresses({\n      apiKey: GetAddressConfig.apiKey ?? 'AG2YtZS2HEKCTOsZcDCFTg28696',\n      postCode: InputValueRef.current,\n      callback: onApiCall,\n      callThrottle: throttle ?? 500,\n      validator: validator ?? validatorPostCode\n    })\n  }\n\n  const handleAddressSelect = ({ name: address, id }) => {\n    setValue(name, InputValueRef.current + '-' + address)\n  }\n\n  return (\n    <FormLabel label={label}>\n      <InputWrapper>\n        <FormField\n          errors={errors[name] ? errors : Errors}\n          name={name}\n          onChange={(e) => handleInputChange(e.target.value)}\n          placeholder={placeholder}\n          register={register}\n          size={size}\n        />\n        <InputGroupAddon addonType=\"append\">\n          <Button\n            onClick={handleSearchClick}\n            content=\"Search\"\n            context=\"primary\"\n            size=\"sm\"\n          />\n        </InputGroupAddon>\n      </InputWrapper>\n      {(errors[name] || Errors[name]) && (\n        <FormError\n          message={errors[name] ? errors[name].message : Errors[name].message}\n        />\n      )}\n      {IsLoading && (\n        <LoadingWrapper size={size}>\n          <Shimmer duration={500} />\n        </LoadingWrapper>\n      )}\n\n      <Dropdown caret={false} items={Addresses} onChange={handleAddressSelect}>\n        <div ref={ref} />\n      </Dropdown>\n    </FormLabel>\n  )\n}\n\nconst InputWrapper = styled.div`\n  display: flex;\n  input {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n`\n\nconst LoadingWrapper = styled.div`\n  width: 80%;\n  position: absolute;\n  top: 2.4rem;\n  left: 1.5rem;\n\n  ${({ size }) => {\n    switch (size) {\n      case THEME_SIZE.SM:\n        return css`\n          top: 2.1rem;\n          height: 0.8rem;\n        `\n      case THEME_SIZE.MD:\n        return css`\n          height: 1.125rem;\n        `\n      case THEME_SIZE.LG:\n        return css`\n          height: 1.45rem;\n        `\n      default:\n        return css`\n          height: 1.45rem;\n        `\n    }\n  }}\n`\n\nGetAddress.propTypes = {\n  errors: object.isRequired,\n  label: string,\n  name: string.isRequired,\n  register: func.isRequired,\n  setValue: func.isRequired,\n  size: oneOf(['sm', 'md', 'lg']),\n  throttle: number,\n  validator: func\n}\n\nGetAddress.defaultProps = {\n  size: 'lg'\n}\n"],"file":"index.js"}