{"version":3,"sources":["../../../../components/molecules/carousel/components/carousel.js"],"names":["React","useEffect","useState","styled","css","Carouselnav","CarouselSampleSlide","Icon","Pagination","revert","ResizeDetector","CarouselDefaultProps","CarouselPropTypes","interval","Carousel","navContext","navPosition","autoplay","autoplayInterval","children","fullWidth","gap","height","leftNavIcon","leftNavComponent","numberOfItems","paginationProps","paginationPosition","rightNavIcon","rightNavComponent","showNavs","showPagination","slides","width","dataSource","length","currentImageIndex","setCurrentImageIndex","NumberOfItems","setNumberOfItems","resetNumberOfItems","found","key","Number","setInterval","nextSlide","clearInterval","previousSlide","lastIndex","shouldResetIndex","index","renderPagination","page","hasNavigation","Array","isArray","navComponents","components","left","right","map","item","ItemWrapper","div","transform","NavWrapper","componentPosition","endNav","Wrapper","PaginationWrapper","defaultProps","propTypes"],"mappings":"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","sourcesContent":["/**\n * Carousel\n */\n\n// React\nimport React, { useEffect, useState } from 'react'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport { Carouselnav } from './nav'\nimport { CarouselSampleSlide } from './sample'\nimport { Icon, Pagination, revert, ResizeDetector } from '../../../'\nimport { CarouselDefaultProps, CarouselPropTypes } from './props'\n\nlet interval\n\nexport const Carousel = ({\n  navContext,\n  navPosition,\n  autoplay,\n  autoplayInterval,\n  children,\n  fullWidth,\n  gap,\n  height,\n  leftNavIcon,\n  leftNavComponent,\n  numberOfItems,\n  paginationProps,\n  paginationPosition,\n  rightNavIcon,\n  rightNavComponent,\n  showNavs,\n  showPagination,\n  slides,\n  width\n}) => {\n  let dataSource = slides || children\n\n  dataSource = revert(dataSource)\n\n  const [currentImageIndex, setCurrentImageIndex] = useState(\n    (slides || children).length - 1\n  )\n  const [NumberOfItems, setNumberOfItems] = useState(\n    typeof numberOfItems === 'number' ? numberOfItems : 1\n  )\n\n  const resetNumberOfItems = (width) => {\n    let found = false\n    for (const key in numberOfItems) {\n      if (width <= Number(key) && found === false) {\n        found = true\n        setNumberOfItems(numberOfItems[key])\n      }\n    }\n    if (found === false) {\n      setNumberOfItems(10)\n    }\n  }\n\n  useEffect(() => {\n    if (autoplay === true) {\n      interval = setInterval(() => {\n        nextSlide()\n      }, autoplayInterval)\n    }\n    return () => {\n      clearInterval(interval)\n    }\n  }, [currentImageIndex])\n\n  const previousSlide = () => {\n    const lastIndex = dataSource.length - 1\n    const shouldResetIndex = currentImageIndex === lastIndex\n    const index = shouldResetIndex ? 0 : currentImageIndex + 1\n    setCurrentImageIndex(index)\n  }\n\n  const nextSlide = () => {\n    const lastIndex = dataSource.length - 1\n    const shouldResetIndex = currentImageIndex === NumberOfItems - 1\n    const index = shouldResetIndex ? lastIndex : currentImageIndex - 1\n    setCurrentImageIndex(index)\n  }\n\n  const renderPagination = () => (\n    <PaginationWrapper>\n      <Pagination\n        currentPage={dataSource.length - currentImageIndex}\n        nextLabel={<Icon icon=\"chevron-right\" />}\n        onPageChange={(page) => {\n          setCurrentImageIndex(dataSource.length - page)\n        }}\n        pageCount={dataSource.length}\n        prevLabel={<Icon icon=\"chevron-left\" />}\n        showNextAndPrev\n        size=\"xs\"\n        {...paginationProps}\n      />\n    </PaginationWrapper>\n  )\n\n  const hasNavigation = Array.isArray(dataSource) && dataSource.length > 1\n\n  const navComponents = () => {\n    const components = {\n      left: (\n        <Carouselnav\n          context={navContext}\n          clickFunction={previousSlide}\n          direction=\"left\"\n          icon={leftNavIcon}\n          position={navPosition}\n        />\n      ),\n\n      right: (\n        <Carouselnav\n          context={navContext}\n          clickFunction={nextSlide}\n          direction=\"right\"\n          icon={rightNavIcon}\n          position={navPosition}\n        />\n      )\n    }\n    if (leftNavComponent) {\n      components.left = (\n        <NavWrapper componentPosition={navPosition} onClick={nextSlide}>\n          {leftNavComponent}\n        </NavWrapper>\n      )\n    }\n    if (rightNavComponent) {\n      components.right = (\n        <NavWrapper\n          componentPosition={navPosition}\n          endNav\n          onClick={previousSlide}>\n          {rightNavComponent}\n        </NavWrapper>\n      )\n    }\n\n    return components\n  }\n\n  return (\n    <>\n      <Wrapper width={width} height={height} fullWidth={fullWidth}>\n        {typeof numberOfItems !== 'number' && (\n          <ResizeDetector onResize={({ width }) => resetNumberOfItems(width)} />\n        )}\n\n        {hasNavigation && showNavs && navComponents().left}\n\n        {dataSource.map((item, index) => {\n          return (\n            <ItemWrapper\n              gap={gap}\n              width={`calc(${100 / NumberOfItems}% - ${gap}px)`}\n              transform={`translateX(calc(${\n                currentImageIndex - index\n              } * calc(100% + ${gap}px)))`}\n              key={'slide' + index}>\n              {slides ? <CarouselSampleSlide {...item} /> : dataSource[index]}\n            </ItemWrapper>\n          )\n        })}\n\n        {hasNavigation &&\n          showPagination &&\n          paginationPosition === 'inside' &&\n          renderPagination()}\n\n        {hasNavigation && showNavs && navComponents().right}\n      </Wrapper>\n\n      {hasNavigation &&\n        showPagination &&\n        paginationPosition === 'outside' &&\n        renderPagination()}\n    </>\n  )\n}\n\nconst ItemWrapper = styled.div`\n  position: absolute;\n  transition: all 0.5s ease;\n  ${({ gap, transform, width }) => css`\n    margin-left: ${gap / 2}px;\n    transform: ${transform};\n    width: ${width};\n  `}\n`\n\nconst NavWrapper = styled.div`\n  align-items: ${({ componentPosition }) =>\n    componentPosition === 'top'\n      ? 'flex-start'\n      : componentPosition === 'bottom'\n      ? 'flex-end'\n      : 'center'};\n\n  display: flex;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  z-index: 1;\n  cursor: pointer;\n\n  ${({ endNav }) =>\n    endNav === true &&\n    css`\n      right: 0;\n    `}\n`\nconst Wrapper = styled.div`\n  overflow: hidden;\n  height: ${({ height }) => height};\n  min-height: ${({ height }) => height};\n  margin: 0;\n  position: relative;\n  width: ${({ width, fullWidth }) => (fullWidth ? '100%' : width)};\n`\n\nconst PaginationWrapper = styled.div`\n  box-sizing: border-box;\n  margin: 1rem 0;\n  width: 100%;\n`\n\nCarousel.defaultProps = CarouselDefaultProps\n\nCarousel.propTypes = CarouselPropTypes\n"],"file":"carousel.js"}