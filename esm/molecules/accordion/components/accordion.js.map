{"version":3,"sources":["../../../../components/molecules/accordion/components/accordion.js"],"names":["React","useState","Children","cloneElement","array","node","object","string","bool","styled","AccordionItem","renderItem","index","current","handleCurrent","body","context","title","includes","Body","children","data","closeOthersOnOpen","initialOpen","findIndex","_","props","open","setCurrent","prev","temp","filter","map","child","key","handleOpen","item","Accordion","className","style","StyledAccordion","div","propTypes"],"mappings":"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","sourcesContent":["/**\n * Accordion\n */\n\n// React\nimport React, { useState, Children, cloneElement } from 'react'\nimport { array, node, object, string, bool } from 'prop-types'\n\n// Style\nimport styled from 'styled-components'\n\n// UI\nimport { AccordionItem } from '../../'\n\nconst renderItem = (\n  { body, context, title },\n  index,\n  current,\n  handleCurrent\n) => {\n  return (\n    <AccordionItem\n      key={index}\n      context={context}\n      open={current.includes(index)}\n      title={title}\n      handleOpen={() => handleCurrent(index)}>\n      {body}\n    </AccordionItem>\n  )\n}\n\nconst Body = ({ children, data, closeOthersOnOpen }) => {\n  const initialOpen = children\n    ? children.findIndex((_) => _.props.open)\n    : data.findIndex((_) => _.open)\n  const [current, setCurrent] = useState(initialOpen > -1 ? [initialOpen] : [])\n  const handleCurrent = (index) => {\n    setCurrent((prev) => {\n      let temp = []\n      if (closeOthersOnOpen && !prev.includes(index)) {\n        temp = [index]\n      } else {\n        if (prev.includes(index)) temp = prev.filter((_) => _ !== index)\n        else temp = [...prev, index]\n      }\n      return temp\n    })\n  }\n\n  let map = []\n\n  if (children) {\n    map = Children.map(children, (child, index) => {\n      return cloneElement(child, {\n        index,\n        key: index,\n        open: current.includes(index),\n        handleOpen: (index) => handleCurrent(index)\n      })\n    })\n  } else {\n    map = data.map((item, index) =>\n      renderItem(item, index, current, handleCurrent, index)\n    )\n  }\n\n  return map\n}\n\nexport const Accordion = ({\n  children,\n  className,\n  data,\n  style,\n  closeOthersOnOpen\n}) => {\n  return (\n    <StyledAccordion className={className} style={style}>\n      <Body\n        children={children}\n        data={data}\n        closeOthersOnOpen={closeOthersOnOpen}\n      />\n    </StyledAccordion>\n  )\n}\n\nconst StyledAccordion = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 0.25rem;\n`\n\nAccordion.propTypes = {\n  children: node,\n  className: string,\n  closeOthersOnOpen: bool,\n  data: array,\n  style: object\n}\n"],"file":"accordion.js"}