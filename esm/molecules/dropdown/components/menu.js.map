{"version":3,"sources":["../../../../components/molecules/dropdown/components/menu.js"],"names":["React","array","func","oneOf","styled","css","elementTypes","DropdownItem","THEME_POSITION","DropdownMenu","closeDropdown","elementType","items","onItemClick","position","handleClick","item","map","id","StyledDropdownMenu","div","theme","DROPDOWN","BORDER_COLOUR","Right","Top","Colour","Icon","dist","size","TooltipRectangle","border","Bottom","Left","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * Components - Molecules - Dropdown - Menu\n */\n\n// React\nimport React from 'react'\nimport { array, func, oneOf } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport { elementTypes, DropdownItem } from '../../../'\nimport { THEME_POSITION } from '../../../theme/constants/position'\n\nexport const DropdownMenu = ({\n  closeDropdown,\n  elementType,\n  items,\n  onItemClick,\n  position\n}) => {\n  const handleClick = (item) => {\n    onItemClick && onItemClick(item)\n    closeDropdown()\n  }\n\n  return (\n    <StyledDropdownMenu\n      elementType={elementType}\n      className=\"dropdown--menu\"\n      position={position}>\n      <TooltipRectangle position={position} />\n      <TooltipRectangle position={position} border />\n      {items.map((item) => (\n        <DropdownItem\n          closeDropdown={closeDropdown}\n          elementType={elementType}\n          item={item}\n          key={item.id}\n          onClick={() => handleClick(item)}\n        />\n      ))}\n    </StyledDropdownMenu>\n  )\n}\n\nconst StyledDropdownMenu = styled.div`\n  background: #fff;\n  ${({ theme }) => css`\n    border: 1px solid ${theme.DROPDOWN.BORDER_COLOUR};\n  `}\n  border-radius: 0.25rem;\n  left: 0;\n  margin-top: 1px;\n  min-width: 8rem;\n  padding: 0.5rem 0;\n  position: absolute;\n  top: 100%;\n  z-index: 2;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.15);\n  ${({ position }) =>\n    position &&\n    css`\n      left: ${position === THEME_POSITION.Right ? 'auto' : '0'};\n      right: ${position === THEME_POSITION.Right ? '0' : 'auto'};\n      ${position === THEME_POSITION.Top &&\n      css`\n        bottom: 100%;\n        top: unset;\n      `}\n    `}\n  ${({ elementType }) => {\n    return (\n      (elementType === elementTypes.Colour ||\n        elementType === elementTypes.Icon) &&\n      css`\n        box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\n        display: grid;\n        padding: 5px;\n        grid-template-columns: repeat(8, 2rem);\n        grid-template-rows: repeat(3, 2rem);\n      `\n    )\n  }}\n`\n\nconst dist = '0.625rem'\nconst size = '0.875rem'\n\nconst TooltipRectangle = styled.div`\n  ${({ border }) => css`\n    border-color: transparent transparent\n      ${border ? 'rgb(255, 255, 255)' : 'rgb(103,103,103)'};\n  `}\n  border-image: initial;\n  border-style: solid;\n  border-width: 0.438rem;\n  position: absolute;\n\n  ${({ position, border }) => {\n    switch (position) {\n      case THEME_POSITION.Bottom:\n        return css`\n          top: calc(-${size} - ${border ? '0px' : '1px'});\n          left: ${dist};\n        `\n      case THEME_POSITION.Top:\n        return css`\n          bottom: calc(-${size} - ${border ? '0px' : '1px'});\n          left: ${dist};\n          transform: rotateX(180deg);\n        `\n      case THEME_POSITION.Left:\n        return css`\n          display: none; /*remove when initial left position is resolved */\n          bottom: ${size};\n          right: calc(-${size} - ${border ? '0px' : '1px'});\n          transform: rotateZ(90deg);\n        `\n      case THEME_POSITION.Right:\n        return css`\n          display: none; /*remove when initial left position is resolved */\n          bottom: ${size};\n          left: calc(-${size} - ${border ? '0px' : '1px'});\n          transform: rotateZ(-90deg);\n        `\n      default:\n        break\n    }\n  }}\n`\n\nDropdownMenu.propTypes = {\n  closeDropdown: func,\n  items: array.isRequired,\n  onItemClick: func,\n  position: oneOf([\n    THEME_POSITION.Top,\n    THEME_POSITION.Right,\n    THEME_POSITION.Bottom,\n    THEME_POSITION.Left\n  ])\n}\n"],"file":"menu.js"}