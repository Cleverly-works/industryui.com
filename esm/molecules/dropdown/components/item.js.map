{"version":3,"sources":["../../../../components/molecules/dropdown/components/item.js"],"names":["React","func","object","node","styled","css","elementTypes","Icon","Link","renderItem","closeDropdown","onClick","id","name","to","item","DropdownItem","elementType","List","divider","Colour","colour","icon","prefix","StyledIconItem","div","theme","COLOUR","light","dark","StyledColourItem","white","size","StyledDropdownItem","StyledDivider","StyledLink","span","primary","propTypes","children"],"mappings":"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","sourcesContent":["/**\n * Dropdown - Item\n */\n\n// React\nimport React from 'react'\nimport { func, object, node } from 'prop-types'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport { elementTypes, Icon, Link } from '../../../'\n\nconst renderItem = ({ id, name, to }, closeDropdown, onClick) => {\n  const item = () => (\n    <StyledLink className=\"dropdown--link\" id={id} onClick={onClick}>\n      {name}\n    </StyledLink>\n  )\n\n  return to ? (\n    <Link border={false} passHref to={to}>\n      {item()}\n    </Link>\n  ) : (\n    item()\n  )\n}\n\nexport const DropdownItem = ({ closeDropdown, elementType, item, onClick }) => {\n  switch (elementType) {\n    case elementTypes.List:\n      return (\n        <StyledDropdownItem divider={item.divider}>\n          {item.divider ? (\n            <StyledDivider />\n          ) : (\n            renderItem(item, closeDropdown, onClick)\n          )}\n        </StyledDropdownItem>\n      )\n\n    case elementTypes.Colour:\n      return (\n        <StyledColourItem\n          colour={item.colour}\n          onClick={() => {\n            onClick(item)\n          }}\n        />\n      )\n\n    case elementTypes.Icon:\n      return (\n        <StyledIconItem onClick={onClick}>\n          <Icon fixedWidth={false} icon={item?.icon} prefix={item?.prefix} />\n        </StyledIconItem>\n      )\n\n    default:\n      return 'invalid elementType'\n  }\n}\n\nconst StyledIconItem = styled.div`\n  border: 1px solid ${({ theme }) => theme.COLOUR.light};\n  height: 2rem;\n  line-height: 2rem;\n  text-align: center;\n  width: 2rem;\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.COLOUR.dark};\n  }\n`\n\nconst StyledColourItem = styled.div`\n  height: 2em;\n  width: 2rem;\n  ${({ colour, theme }) =>\n    css`\n      background-color: ${colour};\n      &:hover {\n        border: 1px solid ${theme.COLOUR.white};\n      }\n    `}\n  ${({ colour, theme }) => {\n    const size = '0.5rem'\n    return (\n      colour === 'transparent' &&\n      css`\n        background-image: linear-gradient(45deg, #808080 25%, transparent 25%),\n          linear-gradient(-45deg, #808080 25%, transparent 25%),\n          linear-gradient(45deg, transparent 75%, #808080 75%),\n          linear-gradient(-45deg, transparent 75%, #808080 75%);\n        background-size: ${size} ${size};\n        background-position: 0 0, 0 ${size}, ${size} -${size}, -${size} 0px;\n      `\n    )\n  }}\n`\n\nconst StyledDropdownItem = styled.div`\n  line-height: 1.5;\n  white-space: nowrap;\n  ${({ divider }) =>\n    divider &&\n    css`\n      padding: 0;\n    `}\n`\n\nconst StyledDivider = styled.div`\n  border-top: 1px solid #33475b;\n  height: 0;\n  margin: 0.5rem;\n  overflow: hidden;\n`\n\nconst StyledLink = styled.span`\n  color: ${({ theme }) => theme.COLOUR.primary};\n  display: block;\n  padding: 0.25rem 1.5rem;\n  &:hover {\n    background-color: #f8f9fa;\n    color: inherit;\n  }\n`\n\nDropdownItem.propTypes = {\n  children: node,\n  closeDropdown: func,\n  item: object,\n  onClick: func\n}\n"],"file":"item.js"}