{"version":3,"sources":["../../../../components/molecules/table/formatter/link.js"],"names":["React","object","Router","StyledLink","styled","TableLink","path","key","value","dynamicUrl","row","useLink","getPath","url","handleClick","e","preventDefault","stopPropagation","push","item","StyleLink","propTypes","isRequired"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,WAA3B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAmBC,UAAnB;AAAA,SAAkC,gBAAa;AAAA,QAAVC,GAAU,QAAVA,GAAU;AACtE,QAAIC,OAAO,GAAG,KAAd;AACAA,IAAAA,OAAO,GAAGD,GAAG,CAACD,UAAD,CAAH,IAAmBH,IAA7B;;AAEA,QAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,UAAMC,GAAG,GAAGH,GAAG,CAACD,UAAD,CAAH,IAAmBH,IAA/B;AACA,uBAAUO,GAAV,iBAAoBH,GAAG,CAACH,GAAD,CAAvB;AACD,KAHD;;AAKA,QAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,eAAF;AACAf,MAAAA,MAAM,CAACgB,IAAP,CAAYN,OAAO,EAAnB;AACD,KAJD;;AAMA,QAAMO,IAAI,GAAGT,GAAG,CAACF,KAAD,CAAhB;AAEA,WAAOG,OAAO,GACZQ,IAAI,KAAK,GAAT,gBACE,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAnB;AAA0B,MAAA,IAAI,EAAEP,OAAO,EAAvC;AAA2C,MAAA,OAAO,EAAEE;AAApD,OACGK,IADH,CADF,GAKE,GANU,GASZA,IATF;AAWD,GA5BwB;AAAA,CAAlB;AA8BP,IAAMC,SAAS,GAAGhB,MAAM,CAACD,UAAD,CAAT,sJAAf;AAQAE,SAAS,CAACgB,SAAV,GAAsB;AACpBX,EAAAA,GAAG,EAAET,MAAM,CAACqB;AADQ,CAAtB","sourcesContent":["/**\n * Components - Molecules - Table - Formatter - Link\n */\n\n// React\nimport React from 'react'\nimport { object } from 'prop-types'\n\n// Next\nimport Router from 'next/router'\n\n// UI\nimport { StyledLink } from '../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const TableLink = (path, key, value, dynamicUrl) => ({ row }) => {\n  let useLink = false\n  useLink = row[dynamicUrl] || path\n\n  const getPath = () => {\n    const url = row[dynamicUrl] || path\n    return `${url}?id=${row[key]}`\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    Router.push(getPath())\n  }\n\n  const item = row[value]\n\n  return useLink ? (\n    item !== '-' ? (\n      <StyleLink border={false} href={getPath()} onClick={handleClick}>\n        {item}\n      </StyleLink>\n    ) : (\n      '-'\n    )\n  ) : (\n    item\n  )\n}\n\nconst StyleLink = styled(StyledLink)`\n  &:hover {\n    background: #ddd;\n    margin: -8px;\n    padding: 8px;\n  }\n`\n\nTableLink.propTypes = {\n  row: object.isRequired\n}\n"],"file":"link.js"}