{"version":3,"sources":["../../../../components/molecules/table/components/rows.js"],"names":["React","memo","array","bool","func","oneOfType","string","TableData","TableRow","TableRows","align","columns","hover","rowClick","rows","striped","handleClick","e","preventDefault","row","currentTarget","getAttribute","JSON","parse","clickable","map","index","context","hidden","stringify","Object","entries","key","value","length","column","renderValue","formatter","data","formatterData","__html","propTypes","isRequired","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Components - Molecules - Table - Rows\n */\n\n// React\nimport React, { memo } from 'react'\nimport { array, bool, func, oneOfType, string } from 'prop-types'\n\n// UI\nimport { TableData, TableRow } from '../../../'\n\nexport const TableRows = memo(\n  ({ align, columns, hover, rowClick, rows, striped }) => {\n    const handleClick = (e) => {\n      e.preventDefault()\n      const row = e.currentTarget.getAttribute('data-item')\n      rowClick(JSON.parse(row))\n    }\n\n    const clickable = typeof rowClick === 'function'\n\n    return rows.map((row, index) => {\n      const context = row.context\n      delete row.context\n\n      if (row.hidden) {\n        return null\n      } else {\n        delete row.hidden\n      }\n\n      return (\n        <TableRow\n          context={context}\n          data-item={JSON.stringify(row)}\n          hover={hover}\n          key={index}\n          onClick={clickable ? handleClick : null}\n          pointer={clickable}\n          striped={striped}>\n          {Object.entries(row).map(([key, value], index) => {\n            const length = columns.length\n            const column = columns[index]\n\n            if (length && column.hidden) {\n              return false\n            }\n\n            const renderValue = typeof value === 'function' ? value() : value\n\n            return (\n              <TableData align={align} key={index}>\n                {length > 0 && column.formatter ? (\n                  column.formatter({ row, data: column.formatterData })\n                ) : value && value.__html ? (\n                  <span dangerouslySetInnerHTML={value} />\n                ) : (\n                  renderValue\n                )}\n              </TableData>\n            )\n          })}\n        </TableRow>\n      )\n    })\n  }\n)\n\nTableRows.propTypes = {\n  align: oneOfType([string, bool]),\n  columns: array,\n  hover: bool,\n  rowClick: func,\n  rows: array.isRequired,\n  striped: bool\n}\n\nTableRows.defaultProps = {\n  align: false,\n  columns: [],\n  hover: true,\n  striped: true\n}\n"],"file":"rows.js"}