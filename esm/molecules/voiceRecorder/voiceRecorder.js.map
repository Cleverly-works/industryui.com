{"version":3,"sources":["../../../components/molecules/voiceRecorder/voiceRecorder.js"],"names":["React","useEffect","useRef","useState","styled","css","Close","Text","MicIcon","toHHMMSS","THEME_COLOUR","AudioRecorder","mpegEncoder","VoiceRecorder","onVoiceRecord","overlayStyle","recorderLoaded","setRecorderLoaded","timer","setTimer","recorder","timerInterval","canSendData","isRecording","setisRecording","loadModules","encoder","prototype","mimeType","window","MediaRecorder","stopTimer","clearInterval","current","handleStartRecord","navigator","mediaDevices","getUserMedia","audio","then","stream","addEventListener","e","start","setInterval","time","handleStopRecord","stop","getTracks","forEach","i","handleCancelRecord","showRecorder","success","sec","hasMinute","hasSecond","StopIcon","div","theme","COLOUR","danger","Dot","span","Loader","OverlayRecorderIconWrapper","TimerWrapper","VOICE_RECORDER","timerColour","Wrapper","OverLay","overlayBackground"],"mappings":"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","sourcesContent":["/**\n * Components - Molecules - Voice Rcorder\n */\n\n// React\nimport React, { useEffect, useRef, useState } from 'react'\n\n// Style\nimport styled, { css } from 'styled-components'\n\n// UI\nimport { Close, Text, MicIcon, toHHMMSS } from '../../'\nimport { THEME_COLOUR } from '../../theme/variables/colour'\n\nlet AudioRecorder\nlet mpegEncoder\n\nexport const VoiceRecorder = ({ onVoiceRecord, overlayStyle }) => {\n  const [recorderLoaded, setRecorderLoaded] = useState(false)\n  const [timer, setTimer] = useState(0)\n  const recorder = useRef()\n  const timerInterval = useRef()\n  const canSendData = useRef(true)\n  const [isRecording, setisRecording] = useState(false)\n\n  const loadModules = async () => {\n    AudioRecorder = (await import('audio-recorder-polyfill')).default\n    mpegEncoder = (await import('audio-recorder-polyfill/mpeg-encoder')).default\n\n    AudioRecorder.encoder = mpegEncoder\n    AudioRecorder.prototype.mimeType = 'audio/mpeg'\n\n    if (window) {\n      window.MediaRecorder = AudioRecorder\n    }\n\n    setRecorderLoaded(true)\n  }\n\n  useEffect(() => {\n    loadModules()\n    return () => {\n      stopTimer()\n    }\n  }, [])\n\n  const stopTimer = () => {\n    clearInterval(timerInterval.current)\n    timerInterval.current = null\n\n    setTimer(0)\n  }\n\n  const handleStartRecord = () => {\n    window &&\n      window.navigator.mediaDevices\n        .getUserMedia({ audio: true })\n        .then((stream) => {\n          recorder.current = new window.MediaRecorder(stream)\n\n          // Set record to <audio> when recording will be finished\n          recorder.current.addEventListener('dataavailable', (e) => {\n            if (canSendData.current === true) {\n              onVoiceRecord(e)\n            } else {\n              canSendData.current = true\n            }\n            stopTimer()\n          })\n\n          // Start recording\n          recorder.current.start()\n          timerInterval.current = setInterval(() => {\n            setTimer((time) => time + 1)\n          }, 1000)\n          setisRecording(true)\n        })\n  }\n\n  const handleStopRecord = () => {\n    recorder.current.stop()\n    // Remove \"recording\" icon from browser tab\n    recorder.current.stream.getTracks().forEach((i) => i.stop())\n    setisRecording(false)\n    stopTimer()\n  }\n\n  const handleCancelRecord = () => {\n    canSendData.current = false\n    handleStopRecord()\n  }\n\n  const showRecorder = ({ onVoiceRecord, overlayStyle }) => {\n    if (!recorderLoaded) return <MicIcon disabled />\n    return (\n      <>\n        <OverLay isRecording={isRecording} style={overlayStyle}>\n          {isRecording && (\n            <OverlayRecorderIconWrapper>\n              <MicIcon colour={THEME_COLOUR.success} />\n            </OverlayRecorderIconWrapper>\n          )}\n\n          <Text content=\"Recording\" context=\"dark\" />\n\n          <Loader>\n            <Dot>.</Dot>\n            <Dot>.</Dot>\n            <Dot>.</Dot>\n          </Loader>\n\n          <TimerWrapper>\n            {toHHMMSS({ sec: timer + '', hasMinute: true, hasSecond: true })}\n          </TimerWrapper>\n\n          <Close click={handleCancelRecord} context=\"danger\" />\n        </OverLay>\n\n        <Wrapper onClick={isRecording ? handleStopRecord : handleStartRecord}>\n          {isRecording ? <StopIcon /> : <MicIcon hoverColour />}\n        </Wrapper>\n      </>\n    )\n  }\n\n  return showRecorder({ onVoiceRecord, overlayStyle })\n}\n\nconst StopIcon = styled.div`\n  background-color: ${({ theme }) => theme.COLOUR.danger};\n  border-radius: 3px;\n  height: 1rem;\n  width: 1rem;\n`\n\nconst Dot = styled.span``\n\nconst Loader = styled.div`\n  margin-top: -0.25rem;\n  @keyframes blink {\n    50% {\n      color: transparent;\n    }\n  }\n  span {\n    animation: 1s blink infinite;\n    font-size: 1.5rem;\n  }\n\n  span:nth-child(2) {\n    animation-delay: 250ms;\n  }\n\n  span:nth-child(3) {\n    animation-delay: 500ms;\n  }\n`\n\nconst OverlayRecorderIconWrapper = styled.div`\n  margin-right: 1rem;\n  margin-top: 0.5rem;\n`\n\nconst TimerWrapper = styled.div`\n  color: ${({ theme: { VOICE_RECORDER } }) => VOICE_RECORDER.timerColour};\n  flex: 1;\n  text-align: end;\n  padding-right: 1rem;\n`\n\nconst Wrapper = styled.div`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  height: 100%;\n  padding-left: 0.25rem;\n`\n\nconst OverLay = styled.div`\n  align-items: center;\n  background-color: ${({ theme: { VOICE_RECORDER } }) =>\n    VOICE_RECORDER.overlayBackground};\n  display: flex;\n  height: 45px;\n  left: 4rem;\n  overflow: hidden;\n  position: absolute;\n  top: -2px;\n  transition-property: padding-left, padding-right, width, opacity;\n  transition-duration: 0.3s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 1;\n  ${({ isRecording }) => css`\n    opacity: ${isRecording ? '1' : '0'};\n    padding-left: ${isRecording ? '1rem' : '0rem'};\n    padding-right: ${isRecording ? '1rem' : '0rem'};\n    width: ${isRecording ? 'calc(100% - 8rem)' : '0px'};\n  `}\n`\n"],"file":"voiceRecorder.js"}