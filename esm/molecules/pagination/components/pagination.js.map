{"version":3,"sources":["../../../../components/molecules/pagination/components/pagination.js"],"names":["React","styled","chunk","PaginationItem","PaginationPropTypes","PaginationDefaultProps","Pagination","breakCount","children","context","currentPage","hideWhenOnlyOnePage","nextLabel","onPageChange","pageCount","prevLabel","showNextAndPrev","size","props","handleChange","type","pagesArray","Array","fill","map","p","i","currentChunkIndex","findIndex","includes","prevChunk","currentChunk","nextChunk","showPrevDots","showNextDots","length","showPrevButton","showNextButton","renderContent","StyledPagination","ul","propTypes","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Pagination\n */\n\n// React\nimport React from 'react'\n\n// Style\nimport styled from 'styled-components'\n\n// Lodash\nimport chunk from 'lodash/chunk'\n\n// UI\nimport { PaginationItem } from './'\nimport { PaginationPropTypes, PaginationDefaultProps } from './props'\n\nexport const Pagination = ({\n  breakCount,\n  children,\n  context,\n  currentPage,\n  hideWhenOnlyOnePage,\n  nextLabel,\n  onPageChange,\n  pageCount,\n  prevLabel,\n  showNextAndPrev,\n  size,\n  ...props\n}) => {\n  if (!pageCount) {\n    return null\n  }\n\n  const handleChange = (type) => {\n    if (type === 'prev') {\n      onPageChange(currentPage - 1)\n    } else if (type === 'next') {\n      onPageChange(currentPage + 1)\n    } else {\n      onPageChange(type)\n    }\n  }\n\n  const pagesArray = chunk(\n    Array(pageCount)\n      .fill(0)\n      .map((p, i) => i + 1),\n    breakCount\n  )\n\n  const currentChunkIndex = pagesArray.findIndex((p) => p.includes(currentPage))\n  const prevChunk = pagesArray[currentChunkIndex - 1]\n  const currentChunk = pagesArray[currentChunkIndex]\n  const nextChunk = pagesArray[currentChunkIndex + 1]\n  const showPrevDots = currentChunkIndex > 0\n  const showNextDots =\n    pagesArray.length > 1 && currentChunkIndex + 1 < pagesArray.length\n\n  const showPrevButton = showNextAndPrev && pageCount > 5 && currentPage > 1\n  const showNextButton =\n    showNextAndPrev && pageCount > 5 && currentPage < pageCount\n\n  const renderContent = () => (\n    <>\n      {showPrevButton && (\n        <PaginationItem\n          context={context}\n          disabled={currentPage === 1}\n          label={prevLabel}\n          onClick={() => handleChange('prev')}\n          size={size}\n        />\n      )}\n\n      {showPrevDots && (\n        <PaginationItem\n          onClick={() => handleChange(prevChunk[prevChunk.length - 1])}\n          context={context}\n          label=\"...\"\n          size={size}\n        />\n      )}\n\n      {currentChunk.map((p) => {\n        return (\n          <PaginationItem\n            active={p === currentPage}\n            context={context}\n            key={p}\n            label={p}\n            onClick={() => handleChange(p)}\n            size={size}\n          />\n        )\n      })}\n\n      {showNextDots && (\n        <PaginationItem\n          onClick={() => handleChange(nextChunk[0])}\n          context={context}\n          label=\"...\"\n          size={size}\n        />\n      )}\n\n      {showNextButton && (\n        <PaginationItem\n          context={context}\n          disabled={currentPage === pageCount}\n          label={nextLabel}\n          onClick={() => handleChange('next')}\n          size={size}\n        />\n      )}\n    </>\n  )\n\n  if (hideWhenOnlyOnePage && pageCount < 2) {\n    return null\n  }\n\n  return (\n    <StyledPagination aria-label=\"Pagination\">\n      {children || renderContent()}\n    </StyledPagination>\n  )\n}\n\nconst StyledPagination = styled.ul`\n  padding-left: 0;\n  list-style: none;\n  width: fit-content;\n  margin: 0 auto;\n`\n\nPagination.propTypes = PaginationPropTypes\nPagination.defaultProps = PaginationDefaultProps\n"],"file":"pagination.js"}