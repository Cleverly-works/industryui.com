{"version":3,"sources":["../../../../components/molecules/pageLoading/components/ldsSpinner.js"],"names":["React","number","string","styled","SPINNER","Array","fill","LdsSpinnerWrapper","div","size","color","spinner","temp","forEach","s","i","parseFloat","LdsSpinner","props","map","propTypes","defaultProps"],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,YAA/B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,OAAO,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,EAAf,CAAhB;AAEA,IAAMC,iBAAiB,GAAGJ,MAAM,CAACK,GAAV,kmBAGZ;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAcA,IAAd;AAAA,CAHY,EAIX;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAd;AAAA,CAJW,EAMC;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,CAArB;AAAA,CAND,EAM6B;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,CAArB;AAAA,CAN7B,EAYV;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,EAAP,GAAY,CAA1B;AAAA,CAZU,EAaT;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,CAAP,GAAW,CAAzB;AAAA,CAbS,EAcR;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,EAAP,GAAY,CAA1B;AAAA,CAdQ,EAeP;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,CAAP,GAAW,CAAzB;AAAA,CAfO,EAgBA;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,CAArB;AAAA,CAhBA,EAiBH;AAAA,MAAGC,KAAH,UAAGA,KAAH;AAAA,SAAeA,KAAf;AAAA,CAjBG,EAqBnB,kBAAiB;AAAA,MAAdC,OAAc,UAAdA,OAAc;AACjB,MAAIC,IAAI,GAAG,EAAX;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxBH,IAAAA,IAAI,sCACcG,CAAC,GAAG,CADlB,8CAEoBA,CAAC,GAAG,EAFxB,+CAGmB,CAAC,GAAD,GAAOC,UAAU,CAACD,CAAC,GAAG,GAAL,CAHpC,0BAAJ;AAMD,GAPD;AAQA,SAAOH,IAAP;AACD,CAhCoB,CAAvB;AA2CA,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACnC,sBACE,oBAAC,iBAAD,eAAuBA,KAAvB;AAA8B,IAAA,OAAO,EAAEd;AAAvC,MACGA,OAAO,CAACe,GAAR,CAAY,UAACL,CAAD,EAAIC,CAAJ;AAAA,wBACX;AAAK,MAAA,GAAG,EAAE,SAASA;AAAnB,MADW;AAAA,GAAZ,CADH,CADF;AAOD,CARM;AAAME,U;AAUbA,UAAU,CAACG,SAAX,GAAuB;AACrBX,EAAAA,IAAI,EAAER,MADe;AAErBS,EAAAA,KAAK,EAAER;AAFc,CAAvB;AAKAe,UAAU,CAACI,YAAX,GAA0B;AACxBZ,EAAAA,IAAI,EAAE,EADkB;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAA1B","sourcesContent":["/**\n * Page Loading\n */\n\n// React\nimport React from 'react'\nimport { number, string } from 'prop-types'\n\n// Style\nimport styled from 'styled-components'\n\nconst SPINNER = Array(12).fill('')\n\nconst LdsSpinnerWrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  div {\n    transform-origin: ${({ size }) => size / 2}px ${({ size }) => size / 2}px;\n    animation: lds-spinner 1.2s linear infinite;\n    ::after {\n      content: ' ';\n      display: block;\n      position: absolute;\n      top: ${({ size }) => size / 10 - 5}px;\n      left: ${({ size }) => size / 2 - 3}px;\n      width: ${({ size }) => size / 10 - 2}px;\n      height: ${({ size }) => size / 4 - 2}px;\n      border-radius: ${({ size }) => size / 4}%;\n      background: ${({ color }) => color};\n    }\n  }\n\n  ${({ spinner }) => {\n    let temp = ''\n    spinner.forEach((s, i) => {\n      temp += `\n        div:nth-child(${i + 1}) {\n          transform: rotate(${i * 30}deg);\n          animation-delay: ${-1.1 + parseFloat(i * 0.1)}s;\n        }\n      `\n    })\n    return temp\n  }}\n  @keyframes lds-spinner {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n`\n\nexport const LdsSpinner = (props) => {\n  return (\n    <LdsSpinnerWrapper {...props} spinner={SPINNER}>\n      {SPINNER.map((s, i) => (\n        <div key={'spin' + i} />\n      ))}\n    </LdsSpinnerWrapper>\n  )\n}\n\nLdsSpinner.propTypes = {\n  size: number,\n  color: string\n}\n\nLdsSpinner.defaultProps = {\n  size: 80,\n  color: '#333'\n}\n"],"file":"ldsSpinner.js"}