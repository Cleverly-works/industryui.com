{"version":3,"sources":["../../../../components/molecules/webcam/components/webcam.js"],"names":["React","Component","bool","func","number","object","oneOf","oneOfType","string","Design","withTheme","Webcam","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","err","stream","props","onUserMediaError","onUserMedia","setState","hasUserMedia","video","srcObject","error","src","window","URL","createObjectURL","state","hasGetUserMedia","mountedInstances","push","userMediaRequested","requestUserMedia","nextProps","audioConstraints","videoConstraints","JSON","stringify","index","indexOf","splice","length","stop","getVideoTracks","map","track","getAudioTracks","revokeObjectURL","screenshotFormat","screenshotQuality","canvas","getCanvas","toDataURL","screenshotWidth","clientWidth","videoHeight","videoWidth","ctx","document","createElement","aspectRatio","canvasWidth","width","height","getContext","drawImage","audio","sourceSelected","constraints","then","forEach","handleUserMedia","e","optionalSource","id","optional","sourceId","constraintToSourceId","constraint","deviceId","Array","isArray","ideal","MediaStreamTrack","getSources","sources","audioSource","videoSource","source","kind","audioSourceId","videoSourceId","className","style","ref"],"mappings":"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","sourcesContent":["/**\n * Webcam\n */\n\n// React\nimport React, { Component } from 'react'\nimport {\n  bool,\n  func,\n  number,\n  object,\n  oneOf,\n  oneOfType,\n  string\n} from 'prop-types'\n\n// UI\nimport { Design } from './design'\n\n// Style\nimport { withTheme } from 'styled-components'\n\nconst Webcam = withTheme(\n  class Webcam extends Component {\n    constructor() {\n      super()\n      this.state = {\n        hasUserMedia: false,\n        src: ''\n      }\n    }\n\n    static propTypes = {\n      audio: bool,\n      onUserMedia: func,\n      onUserMediaError: func,\n      height: oneOfType([number, string]),\n      width: oneOfType([number, string]),\n      screenshotFormat: oneOf(['image/webp', 'image/png', 'image/jpeg']),\n      style: object,\n      className: string,\n      screenshotQuality: number,\n      screenshotWidth: number\n      // audioConstraints: audioConstraintType,\n      // videoConstraints: videoConstraintType\n    }\n\n    static defaultProps = {\n      audio: false,\n      className: '',\n      height: 463.5,\n      onUserMedia: () => {},\n      onUserMediaError: () => {},\n      screenshotFormat: 'image/webp',\n      screenshotQuality: 0.8,\n      // style: { borderRadius: '.5rem .5rem 0 0' },\n      width: 824\n    }\n\n    static mountedInstances = []\n\n    static userMediaRequested = false\n\n    componentDidMount() {\n      if (!this.hasGetUserMedia()) return\n\n      const { hasUserMedia } = this.state\n\n      Webcam.mountedInstances.push(this)\n\n      if (!hasUserMedia && !Webcam.userMediaRequested) {\n        this.requestUserMedia()\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      const { audioConstraints, videoConstraints } = this.props\n\n      if (\n        JSON.stringify(nextProps.audioConstraints) !==\n          JSON.stringify(audioConstraints) ||\n        JSON.stringify(nextProps.videoConstraints) !==\n          JSON.stringify(videoConstraints)\n      ) {\n        this.requestUserMedia()\n      }\n    }\n\n    componentWillUnmount() {\n      const { src } = this.state\n\n      const index = Webcam.mountedInstances.indexOf(this)\n      Webcam.mountedInstances.splice(index, 1)\n\n      if (Webcam.mountedInstances.length === 0 && this.state.hasUserMedia) {\n        if (this.stream.stop) {\n          this.stream.stop()\n        } else {\n          if (this.stream.getVideoTracks) {\n            this.stream.getVideoTracks().map((track) => track.stop())\n          }\n          if (this.stream.getAudioTracks) {\n            this.stream.getAudioTracks().map((track) => track.stop())\n          }\n        }\n        Webcam.userMediaRequested = false\n        window.URL.revokeObjectURL(src)\n      }\n    }\n\n    hasGetUserMedia = () => {\n      return !!(\n        navigator.mediaDevices.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n      )\n    }\n\n    getScreenshot() {\n      const { screenshotFormat, screenshotQuality } = this.props\n      const { hasUserMedia } = this.state\n\n      if (!hasUserMedia) return null\n\n      const canvas = this.getCanvas()\n\n      return canvas && canvas.toDataURL(screenshotFormat, screenshotQuality)\n    }\n\n    getCanvas() {\n      const { screenshotWidth } = this.props\n      const { hasUserMedia } = this.state\n      const { clientWidth, videoHeight, videoWidth } = this.video\n\n      if (!hasUserMedia || !videoHeight) return null\n\n      if (!this.ctx) {\n        const canvas = document.createElement('canvas')\n        const aspectRatio = videoWidth / videoHeight\n\n        const canvasWidth = screenshotWidth || clientWidth\n\n        canvas.width = canvasWidth\n        canvas.height = canvasWidth / aspectRatio\n\n        this.canvas = canvas\n        this.ctx = canvas.getContext('2d')\n      }\n\n      const { ctx, canvas } = this\n      ctx.drawImage(this.video, 0, 0, canvas.width, canvas.height)\n\n      return canvas\n    }\n\n    requestUserMedia() {\n      const { audio, audioConstraints, videoConstraints } = this.props\n\n      navigator.getUserMedia =\n        navigator.mediaDevices.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n\n      const sourceSelected = (audioConstraints, videoConstraints) => {\n        // Request video\n        const constraints = {\n          video: videoConstraints || true\n        }\n\n        // Request Audo\n        if (audio) {\n          constraints.audio = audioConstraints || true\n        }\n\n        navigator.mediaDevices\n          .getUserMedia(constraints)\n          .then((stream) => {\n            Webcam.mountedInstances.forEach(() =>\n              this.handleUserMedia(null, stream)\n            )\n          })\n          .catch((e) => {\n            Webcam.mountedInstances.forEach(() => this.handleUserMedia(e))\n          })\n      }\n\n      if ('mediaDevices' in navigator) {\n        sourceSelected(audioConstraints, videoConstraints)\n      } else {\n        const optionalSource = (id) => ({ optional: [{ sourceId: id }] })\n\n        const constraintToSourceId = (constraint) => {\n          const deviceId = (constraint || {}).deviceId\n\n          if (typeof deviceId === 'string') {\n            return deviceId\n          } else if (Array.isArray(deviceId) && deviceId.length > 0) {\n            return deviceId[0]\n          } else if (typeof deviceId === 'object' && deviceId.ideal) {\n            return deviceId.ideal\n          }\n\n          return null\n        }\n\n        window.MediaStreamTrack.getSources((sources) => {\n          let audioSource = null\n          let videoSource = null\n\n          sources.forEach((source) => {\n            if (source.kind === 'audio') {\n              audioSource = source.id\n            } else if (source.kind === 'video') {\n              videoSource = source.id\n            }\n          })\n\n          const audioSourceId = constraintToSourceId(audioConstraints)\n          if (audioSourceId) {\n            audioSource = audioSourceId\n          }\n\n          const videoSourceId = constraintToSourceId(videoConstraints)\n          if (videoSourceId) {\n            videoSource = videoSourceId\n          }\n\n          sourceSelected(\n            optionalSource(audioSource),\n            optionalSource(videoSource)\n          )\n        })\n      }\n\n      Webcam.userMediaRequested = true\n    }\n\n    handleUserMedia = (err, stream) => {\n      const { onUserMediaError, onUserMedia } = this.props\n\n      if (err) {\n        this.setState({ hasUserMedia: false })\n        onUserMediaError(err)\n        return\n      }\n\n      this.stream = stream\n\n      try {\n        this.video.srcObject = stream\n        this.setState({ hasUserMedia: true })\n      } catch (error) {\n        this.setState({\n          hasUserMedia: true,\n          src: window.URL.createObjectURL(stream)\n        })\n      }\n\n      onUserMedia()\n    }\n\n    render() {\n      const { audio, className, height, style, width } = this.props\n      const { src } = this.state\n\n      return (\n        <video\n          autoPlay\n          width={width}\n          height={height}\n          src={src}\n          muted={audio}\n          className={className}\n          playsInline\n          style={style}\n          ref={(ref) => {\n            this.video = ref\n          }}\n        />\n      )\n    }\n  }\n)\n\nWebcam.Design = Design\n\nexport { Webcam }\n\n// const constrainStringType = PropTypes.oneOfType([\n//   PropTypes.string,\n//   PropTypes.arrayOf(PropTypes.string),\n//   PropTypes.shape({\n//     exact: PropTypes.oneOfType([\n//       PropTypes.string,\n//       PropTypes.arrayOf(PropTypes.string),\n//     ]),\n//   }),\n//   PropTypes.shape({\n//     ideal: PropTypes.oneOfType([\n//       PropTypes.string,\n//       PropTypes.arrayOf(PropTypes.string),\n//     ]),\n//   }),\n// ]);\n\n// const constrainBooleanType = PropTypes.oneOfType([\n//   PropTypes.shape({\n//     exact: PropTypes.bool,\n//   }),\n//   PropTypes.shape({\n//     ideal: PropTypes.bool,\n//   }),\n// ]);\n\n// const constrainLongType = PropTypes.oneOfType([\n//   PropTypes.number,\n//   PropTypes.shape({\n//     exact: PropTypes.number,\n//     ideal: PropTypes.number,\n//     min: PropTypes.number,\n//     max: PropTypes.number,\n//   }),\n// ]);\n\n// const constrainDoubleType = constrainLongType;\n\n// const audioConstraintType = PropTypes.shape({\n//   deviceId: constrainStringType,\n//   groupId: constrainStringType,\n//   autoGainControl: constrainBooleanType,\n//   channelCount: constrainLongType,\n//   latency: constrainDoubleType,\n//   noiseSuppression: constrainBooleanType,\n//   sampleRate: constrainLongType,\n//   sampleSize: constrainLongType,\n//   volume: constrainDoubleType,\n// });\n\n// const videoConstraintType = PropTypes.shape({\n//   deviceId: constrainStringType,\n//   groupId: constrainStringType,\n//   aspectRatio: constrainDoubleType,\n//   facingMode: constrainStringType,\n//   frameRate: constrainDoubleType,\n//   height: constrainLongType,\n//   width: constrainLongType,\n// });\n"],"file":"webcam.js"}