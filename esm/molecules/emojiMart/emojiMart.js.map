{"version":3,"sources":["../../../components/molecules/emojiMart/emojiMart.js"],"names":["React","useEffect","useRef","ReactDOM","bool","func","string","Picker","EmojiMart","closeOnClickOut","handleSelect","handleOpenPicker","open","style","node","handleClickAway","e","preventDefault","domNode","findDOMNode","current","contains","encodeURIComponent","target","document","addEventListener","removeEventListener","handlePickEmoji","emoji","border","borderRadius","width","propTypes","isRequired","defaultProps"],"mappings":";;;;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAMnB;AAAA,MALJC,eAKI,QALJA,eAKI;AAAA,MAJJC,YAII,QAJJA,YAII;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,KACI,QADJA,KACI;AACJ,MAAMC,IAAI,GAAGZ,MAAM,EAAnB;;AAEA,MAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAMC,OAAO,GAAGf,QAAQ,CAACgB,WAAT,CAAqBL,IAAI,CAACM,OAA1B,CAAhB;;AAEA,QAAIF,OAAO,CAACG,QAAR,CAAiBC,kBAAkB,CAACC,MAApC,CAAJ,EAAiD;AAC/CZ,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAPD;;AASAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,IAAI,IAAIH,eAAZ,EAA6B;AAC3Be,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCV,eAAvC;AACD,KAFD,MAEO;AACLS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CX,eAA1C;AACD;;AACD,WAAO,YAAM;AACXS,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CX,eAA1C;AACD,KAFD;AAGD,GATQ,EASN,CAACH,IAAD,CATM,CAAT;;AAWA,MAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQZ,CAAR,EAAc;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,YAAY,CAACkB,KAAK,UAAN,CAAZ;AACAjB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAJD;;AAMA,SACEC,IAAI,iBACF,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,EADR;AAEE,IAAA,SAAS,EAAE,EAFb;AAGE,IAAA,OAAO,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,QAA9B,CAHX;AAIE,IAAA,OAAO,EAAEe,eAJX;AAKE,IAAA,GAAG,EAAC,QALN;AAME,IAAA,SAAS,EAAE,EANb;AAOE,IAAA,aAAa,EAAE,KAPjB;AAQE,IAAA,WAAW,EAAE,KARf;AASE,IAAA,KAAK;AACHE,MAAAA,MAAM,EAAE,SADL;AAEHC,MAAAA,YAAY,EAAE,SAFX;AAGHC,MAAAA,KAAK,EAAE;AAHJ,OAIAlB,KAJA,CATP;AAeE,IAAA,KAAK,EAAC,oBAfR;AAgBE,IAAA,GAAG,EAAEC;AAhBP,IAFJ;AAsBD,CAzDM;AA2DPN,SAAS,CAACwB,SAAV,GAAsB;AACpBvB,EAAAA,eAAe,EAAEL,IADG;AAEpBO,EAAAA,gBAAgB,EAAEN,IAAI,CAAC4B,UAFH;AAGpBvB,EAAAA,YAAY,EAAEL,IAAI,CAAC4B,UAHC;AAIpBrB,EAAAA,IAAI,EAAER,IAJc;AAKpBS,EAAAA,KAAK,EAAEP;AALa,CAAtB;AAQAE,SAAS,CAAC0B,YAAV,GAAyB;AACvBzB,EAAAA,eAAe,EAAE,IADM;AAEvBG,EAAAA,IAAI,EAAE;AAFiB,CAAzB","sourcesContent":["/**\n * Components - Molecules - Emoji Mart\n */\n\n// React\nimport React, { useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport { bool, func, string } from 'prop-types'\n\n// Emoji Mart\nimport { Picker } from 'emoji-mart'\n\nexport const EmojiMart = ({\n  closeOnClickOut,\n  handleSelect,\n  handleOpenPicker,\n  open,\n  style\n}) => {\n  const node = useRef()\n\n  const handleClickAway = (e) => {\n    e.preventDefault()\n    const domNode = ReactDOM.findDOMNode(node.current)\n\n    if (domNode.contains(encodeURIComponent.target)) {\n      handleOpenPicker(false)\n    }\n  }\n\n  useEffect(() => {\n    if (open && closeOnClickOut) {\n      document.addEventListener('mousedown', handleClickAway)\n    } else {\n      document.removeEventListener('mousedown', handleClickAway)\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickAway)\n    }\n  }, [open])\n\n  const handlePickEmoji = (emoji, e) => {\n    e.preventDefault()\n    handleSelect(emoji.native)\n    handleOpenPicker(false)\n  }\n\n  return (\n    open && (\n      <Picker\n        emoji=\"\"\n        emojiSize={16}\n        include={['foods', 'people', 'recent', 'nature']}\n        onClick={handlePickEmoji}\n        set=\"google\"\n        sheetSize={20}\n        showSkinTones={false}\n        showPreview={false}\n        style={{\n          border: 'initial',\n          borderRadius: 'initial',\n          width: '100%',\n          ...style\n        }}\n        title=\"Pick your emoji...\"\n        ref={node}\n      />\n    )\n  )\n}\n\nEmojiMart.propTypes = {\n  closeOnClickOut: bool,\n  handleOpenPicker: func.isRequired,\n  handleSelect: func.isRequired,\n  open: bool,\n  style: string\n}\n\nEmojiMart.defaultProps = {\n  closeOnClickOut: true,\n  open: false\n}\n"],"file":"emojiMart.js"}