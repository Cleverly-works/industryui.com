{"version":3,"sources":["../../components/utils/mockHelpers.js"],"names":["cloneDeep","mergeLocalData","array","key","identifier","local","JSON","parse","window","localStorage","getItem","forEach","i","existing","find","o","parseInt","Object","keys","push","findByKey","value","a","filterByKey","filter","filterByString","string","toLowerCase","includes","getItemAssociation","item","related","foreignKey","r","getItemAssociations","getAssociations","association","map","getManyToManyAssociations","pivot","associatedItems","id","getFirst","getLast","length"],"mappings":"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","sourcesContent":["/**\n * Components - Utils - Mock helpers\n */\n\n// Lodash\nimport cloneDeep from 'lodash/cloneDeep'\n\nexport const mergeLocalData = (array, key, identifier = 'id') => {\n  const local = JSON.parse(window.localStorage.getItem(key))\n\n  if (local) {\n    local.forEach((i) => {\n      const existing = array.find(\n        (o) => o[identifier] === parseInt(i[identifier])\n      )\n\n      if (existing) {\n        Object.keys(i).forEach((key) => {\n          existing[key] = i[key]\n        })\n      } else {\n        array.push(i)\n      }\n    })\n  }\n  return cloneDeep(array)\n}\n\nexport const findByKey = (array, key, value) => {\n  return array.find((a) => a[key] === value)\n}\n\nexport const filterByKey = (array, key, value) => {\n  return array.filter((a) => a[key] === value)\n}\n\nexport const filterByString = (array, key, string) => {\n  return array.filter((a) =>\n    a[key].toLowerCase().includes(string.toLowerCase())\n  )\n}\n\n// add associated object to an item\nexport const getItemAssociation = (item, related, key, foreignKey) => {\n  return related.find((r) => r[key] === item[foreignKey])\n}\n\n// add associated array to an item\nexport const getItemAssociations = (item, related, key, foreignKey) => {\n  return related.filter((r) => r[key] === item[foreignKey])\n}\n\n// add associated array to an array\nexport const getAssociations = (\n  array,\n  related,\n  association,\n  key,\n  foreignKey\n) => {\n  return array.map((item) => {\n    item[association] = related.find((r) => r[key] === item[foreignKey])\n    return item\n  })\n}\n\n// add associated array via pivot array\nexport const getManyToManyAssociations = (\n  item,\n  pivot,\n  related,\n  key,\n  foreignKey\n) => {\n  const associatedItems = pivot.filter((a) => a[key] === item.id)\n  return associatedItems.map((a) => {\n    return related.find((r) => r.id === a[foreignKey])\n  })\n}\n\n// get first item of an array\nexport const getFirst = (array) => {\n  return array[0]\n}\n\n// get last item of an array\nexport const getLast = (array) => {\n  return array[array.length - 1]\n}\n"],"file":"mockHelpers.js"}