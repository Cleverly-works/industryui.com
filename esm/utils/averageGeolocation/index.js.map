{"version":3,"sources":["../../../components/utils/averageGeolocation/index.js"],"names":["averageGeolocation","coords","length","x","y","z","coord","latitude","lat","Math","PI","longitude","lng","cos","sin","total","centralLongitude","atan2","centralSquareRoot","sqrt","centralLatitude"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD,EAAY;AAC5C,MAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAOD,MAAM,CAAC,CAAD,CAAb;AACD;;AAED,MAAIE,CAAC,GAAG,GAAR;AACA,MAAIC,CAAC,GAAG,GAAR;AACA,MAAIC,CAAC,GAAG,GAAR;;AAP4C,6CASxBJ,MATwB;AAAA;;AAAA;AAS5C,wDAA4B;AAAA,UAAjBK,KAAiB;AAC1B,UAAMC,QAAQ,GAAID,KAAK,CAACE,GAAN,GAAYC,IAAI,CAACC,EAAlB,GAAwB,GAAzC;AACA,UAAMC,SAAS,GAAIL,KAAK,CAACM,GAAN,GAAYH,IAAI,CAACC,EAAlB,GAAwB,GAA1C;AAEAP,MAAAA,CAAC,IAAIM,IAAI,CAACI,GAAL,CAASN,QAAT,IAAqBE,IAAI,CAACI,GAAL,CAASF,SAAT,CAA1B;AACAP,MAAAA,CAAC,IAAIK,IAAI,CAACI,GAAL,CAASN,QAAT,IAAqBE,IAAI,CAACK,GAAL,CAASH,SAAT,CAA1B;AACAN,MAAAA,CAAC,IAAII,IAAI,CAACK,GAAL,CAASP,QAAT,CAAL;AACD;AAhB2C;AAAA;AAAA;AAAA;AAAA;;AAkB5C,MAAMQ,KAAK,GAAGd,MAAM,CAACC,MAArB;AAEAC,EAAAA,CAAC,GAAGA,CAAC,GAAGY,KAAR;AACAX,EAAAA,CAAC,GAAGA,CAAC,GAAGW,KAAR;AACAV,EAAAA,CAAC,GAAGA,CAAC,GAAGU,KAAR;AAEA,MAAMC,gBAAgB,GAAGP,IAAI,CAACQ,KAAL,CAAWb,CAAX,EAAcD,CAAd,CAAzB;AACA,MAAMe,iBAAiB,GAAGT,IAAI,CAACU,IAAL,CAAUhB,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAA1B;AACA,MAAMgB,eAAe,GAAGX,IAAI,CAACQ,KAAL,CAAWZ,CAAX,EAAca,iBAAd,CAAxB;AAEA,SAAO;AACLV,IAAAA,GAAG,EAAGY,eAAe,GAAG,GAAnB,GAA0BX,IAAI,CAACC,EAD/B;AAELE,IAAAA,GAAG,EAAGI,gBAAgB,GAAG,GAApB,GAA2BP,IAAI,CAACC;AAFhC,GAAP;AAID,CAhCM","sourcesContent":["/**\n * average geolocation center\n * @param {Array<{lat:number,lng:number}>} coords\n */\n\nexport const averageGeolocation = (coords) => {\n  if (coords.length === 1) {\n    return coords[0]\n  }\n\n  let x = 0.0\n  let y = 0.0\n  let z = 0.0\n\n  for (const coord of coords) {\n    const latitude = (coord.lat * Math.PI) / 180\n    const longitude = (coord.lng * Math.PI) / 180\n\n    x += Math.cos(latitude) * Math.cos(longitude)\n    y += Math.cos(latitude) * Math.sin(longitude)\n    z += Math.sin(latitude)\n  }\n\n  const total = coords.length\n\n  x = x / total\n  y = y / total\n  z = z / total\n\n  const centralLongitude = Math.atan2(y, x)\n  const centralSquareRoot = Math.sqrt(x * x + y * y)\n  const centralLatitude = Math.atan2(z, centralSquareRoot)\n\n  return {\n    lat: (centralLatitude * 180) / Math.PI,\n    lng: (centralLongitude * 180) / Math.PI\n  }\n}\n"],"file":"index.js"}