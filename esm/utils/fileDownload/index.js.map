{"version":3,"sources":["../../../components/utils/fileDownload/index.js"],"names":["Axios","FileDownloader","data","filename","window","blobData","blob","Blob","type","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","downloadFile","url","get","responseType","then","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAChD,MAAIC,MAAJ,EAAY;AACV,QAAMC,QAAQ,GAAG,CAACH,IAAD,CAAjB;AACA,QAAMI,IAAI,GAAG,IAAIF,MAAM,CAACG,IAAX,CAAgBF,QAAhB,EAA0B;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAA1B,CAAb;;AACA,QAAI,OAAOJ,MAAM,CAACK,SAAP,CAAiBC,UAAxB,KAAuC,WAA3C,EAAwD;AACtDN,MAAAA,MAAM,CAACK,SAAP,CAAiBC,UAAjB,CAA4BJ,IAA5B,EAAkCH,QAAlC;AACD,KAFD,MAEO;AACL,UAAMQ,OAAO,GACXP,MAAM,CAACQ,GAAP,IAAcR,MAAM,CAACQ,GAAP,CAAWC,eAAzB,GACIT,MAAM,CAACQ,GAAP,CAAWC,eAAX,CAA2BP,IAA3B,CADJ,GAEIF,MAAM,CAACU,SAAP,CAAiBD,eAAjB,CAAiCP,IAAjC,CAHN;AAIA,UAAMS,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAjB;AACAF,MAAAA,QAAQ,CAACG,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACAJ,MAAAA,QAAQ,CAACK,IAAT,GAAgBT,OAAhB;AACAI,MAAAA,QAAQ,CAACM,YAAT,CAAsB,UAAtB,EAAkClB,QAAlC,EARK,CAUL;AACA;AACA;AACA;;AAEA,UAAI,OAAOY,QAAQ,CAACO,QAAhB,KAA6B,WAAjC,EAA8C;AAC5CP,QAAAA,QAAQ,CAACM,YAAT,CAAsB,QAAtB,EAAgC,QAAhC;AACD;;AAEDL,MAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BT,QAA1B;AACAA,MAAAA,QAAQ,CAACU,KAAT,GApBK,CAsBL;;AACAC,MAAAA,UAAU,CAAC,YAAY;AACrBV,QAAAA,QAAQ,CAACO,IAAT,CAAcI,WAAd,CAA0BZ,QAA1B;AACAX,QAAAA,MAAM,CAACQ,GAAP,CAAWgB,eAAX,CAA2BjB,OAA3B;AACD,OAHS,EAGP,GAHO,CAAV;AAID;AACF;AACF,CAnCM;AAoCP,OAAO,IAAMkB,YAAY,GAAG,SAAfA,YAAe,OAAuB;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAf3B,QAAe,QAAfA,QAAe;AACjDH,EAAAA,KAAK,CAAC+B,GAAN,CAAUD,GAAV,EAAe;AACbE,IAAAA,YAAY,EAAE;AADD,GAAf,EAEGC,IAFH,CAEQ,UAACC,GAAD,EAAS;AACfjC,IAAAA,cAAc,CAACiC,GAAG,CAAChC,IAAL,EAAWC,QAAX,CAAd;AACD,GAJD;AAKD,CANM","sourcesContent":["import Axios from 'axios'\n\nexport const FileDownloader = (data, filename) => {\n  if (window) {\n    const blobData = [data]\n    const blob = new window.Blob(blobData, { type: 'application/octet-stream' })\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n      window.navigator.msSaveBlob(blob, filename)\n    } else {\n      const blobURL =\n        window.URL && window.URL.createObjectURL\n          ? window.URL.createObjectURL(blob)\n          : window.webkitURL.createObjectURL(blob)\n      const tempLink = document.createElement('a')\n      tempLink.style.display = 'none'\n      tempLink.href = blobURL\n      tempLink.setAttribute('download', filename)\n\n      // Safari thinks _blank anchor are pop ups. We only want to set _blank\n      // target if the browser does not support the HTML5 download attribute.\n      // This allows us to download files in desktop safari if pop up blocking\n      // is enabled.\n\n      if (typeof tempLink.download === 'undefined') {\n        tempLink.setAttribute('target', '_blank')\n      }\n\n      document.body.appendChild(tempLink)\n      tempLink.click()\n\n      // Fixes \"webkit blob resource error 1\"\n      setTimeout(function () {\n        document.body.removeChild(tempLink)\n        window.URL.revokeObjectURL(blobURL)\n      }, 200)\n    }\n  }\n}\nexport const downloadFile = ({ url, filename }) => {\n  Axios.get(url, {\n    responseType: 'blob'\n  }).then((res) => {\n    FileDownloader(res.data, filename)\n  })\n}\n"],"file":"index.js"}