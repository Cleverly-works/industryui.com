{"version":3,"sources":["../../components/utils/reactHolder.js"],"names":["React","useEffect","useRef","ReactDOM","string","bool","object","ReactHolderJs","src","width","height","usePlaceholder","init","placeholderRef","window","document","node","findDOMNode","current","Holder","require","run","domain","images","bgnodes","stylenodes","propTypes","placeholder","isRequired","defaultProps","auto","theme"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,YAArC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA4C;AAAA,MAAzCC,GAAyC,QAAzCA,GAAyC;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AACvEV,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,IAAI;AACL,GAFQ,EAEN,CAACJ,GAAD,EAAMG,cAAN,CAFM,CAAT;AAIA,MAAME,cAAc,GAAGX,MAAM,EAA7B;;AAEA,MAAMU,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,QAAI,EAAE,OAAOE,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAA1C,CAAJ,EAAyD;AACvD;AACD;;AAED,QAAI,CAACJ,cAAL,EAAqB;AACnB;AACD;;AAED,QAAMK,IAAI,GAAGb,QAAQ,CAACc,WAAT,CAAqBJ,cAAc,CAACK,OAApC,CAAb,CATiB,CAWjB;;AACA,QAAMC,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEAD,IAAAA,MAAM,CAACE,GAAP,CAAW;AACTC,MAAAA,MAAM,EAAE,WADC;AAETC,MAAAA,MAAM,EAAEP,IAFC;AAGTV,MAAAA,MAAM,EAAE,IAHC;AAITkB,MAAAA,OAAO,EAAE,IAJA;AAKTC,MAAAA,UAAU,EAAE;AALH,KAAX;AAOD,GArBD;;AAuBA,MAAId,cAAJ,EAAoB;AAClB,QAAMH,IAAG,uBAAgBC,KAAhB,cAAyBC,MAAzB,CAAT;;AACA,wBAAO;AAAK,MAAA,GAAG,EAAEF,IAAV;AAAe,MAAA,GAAG,EAAEK,cAApB;AAAoC,kBAAUL;AAA9C,MAAP;AACD,GAHD,MAGO;AACL,wBAAO;AAAK,MAAA,GAAG,EAAEA;AAAV,MAAP;AACD;AACF,CApCM;AAsCPD,aAAa,CAACmB,SAAd,GAA0B;AACxBC,EAAAA,WAAW,EAAErB,MADW;AAExBE,EAAAA,GAAG,EAAEJ,MAAM,CAACwB,UAFY;AAGxBjB,EAAAA,cAAc,EAAEN;AAHQ,CAA1B;AAMAE,aAAa,CAACsB,YAAd,GAA6B;AAC3BF,EAAAA,WAAW,EAAE;AACXG,IAAAA,IAAI,EAAE,IADK;AAEXC,IAAAA,KAAK,EAAE;AAFI,GADc;AAK3BpB,EAAAA,cAAc,EAAE;AALW,CAA7B","sourcesContent":["/**\n * Components - Utils - React Holder\n *\n * @see https://github.com/imsky/holder#placeholder-options for info on more props and themes\n */\n\n// React\nimport React, { useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\nimport { string, bool, object } from 'prop-types'\n\nexport const ReactHolderJs = ({ src, width, height, usePlaceholder }) => {\n  useEffect(() => {\n    init()\n  }, [src, usePlaceholder])\n\n  const placeholderRef = useRef()\n\n  const init = () => {\n    if (!(typeof window !== 'undefined' && window.document)) {\n      return\n    }\n\n    if (!usePlaceholder) {\n      return\n    }\n\n    const node = ReactDOM.findDOMNode(placeholderRef.current)\n\n    // require in here to prevent errors during server-side rendering\n    const Holder = require('holderjs')\n\n    Holder.run({\n      domain: 'holder.js',\n      images: node,\n      object: null,\n      bgnodes: null,\n      stylenodes: null\n    })\n  }\n\n  if (usePlaceholder) {\n    const src = `holder.js/${width}x${height}`\n    return <img src={src} ref={placeholderRef} data-src={src} />\n  } else {\n    return <img src={src} />\n  }\n}\n\nReactHolderJs.propTypes = {\n  placeholder: object,\n  src: string.isRequired,\n  usePlaceholder: bool\n}\n\nReactHolderJs.defaultProps = {\n  placeholder: {\n    auto: true,\n    theme: 'vine'\n  },\n  usePlaceholder: false\n}\n"],"file":"reactHolder.js"}