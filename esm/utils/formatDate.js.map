{"version":3,"sources":["../../components/utils/formatDate.js"],"names":["moment","formatDate","date","Date","seconds","toLocaleDateString","formatIntDate","code","newDate","Intl","DateTimeFormat","year","month","day","hour","minute","format","formatIntDateShort","formatIntDateYear","formatTime","d","getHours","getMinutes","length","formatDateStandard","showTime","getFullYear","getMonth","getDate","formattedDate","join","formatRelativeTime","fromNow"],"mappings":"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","sourcesContent":["/**\n * Format date\n */\nimport moment from 'moment'\n\nexport const formatDate = (date) => {\n  return new Date(date.seconds * 1000).toLocaleDateString()\n}\n\nexport const formatIntDate = (date, code = 'en-GB') => {\n  if (date instanceof Date === false) {\n    return date\n  }\n\n  const newDate = new Intl.DateTimeFormat(code, {\n    year: 'numeric',\n    month: 'long',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  }).format(date)\n\n  return newDate\n}\n\nexport const formatIntDateShort = (date, code = 'en-GB') => {\n  if (date instanceof Date === false) {\n    return date\n  }\n\n  const newDate = new Intl.DateTimeFormat(code, {\n    month: 'long',\n    day: '2-digit'\n  }).format(date)\n\n  return newDate\n}\n\nexport const formatIntDateYear = (date, code = 'en-GB') => {\n  if (date instanceof Date === false) {\n    return date\n  }\n\n  const newDate = new Intl.DateTimeFormat(code, {\n    year: 'numeric'\n  }).format(date)\n\n  return newDate\n}\n\nexport const formatTime = (date) => {\n  const d = new Date(date)\n  let hour = '' + d.getHours()\n  let minute = '' + d.getMinutes()\n\n  if (hour.length < 2) hour = '0' + hour\n  if (minute.length < 2) minute = '0' + minute\n\n  return `${hour}:${minute}`\n}\n\nexport const formatDateStandard = (date, showTime = false) => {\n  const d = new Date(date)\n  const year = d.getFullYear()\n  let month = '' + (d.getMonth() + 1)\n  let day = '' + d.getDate()\n\n  if (month.length < 2) month = '0' + month\n  if (day.length < 2) day = '0' + day\n\n  const formattedDate = [year, month, day].join('-')\n\n  if (showTime) {\n    return formattedDate + ' ' + formatTime(date)\n  } else {\n    return formattedDate\n  }\n}\n\nexport const formatRelativeTime = (date) => {\n  return moment(date).fromNow()\n}\n"],"file":"formatDate.js"}