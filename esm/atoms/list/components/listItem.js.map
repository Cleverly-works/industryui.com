{"version":3,"sources":["../../../../components/atoms/list/components/listItem.js"],"names":["React","bool","node","string","Icon","styled","css","ListItem","border","children","className","flush","group","icon","prefix","style","borderStyles","flushStyles","groupStyles","StyledItem","li","StyledIcon","theme","COLOUR","secondary","propTypes","isRequired"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,YAAnC,C,CAEA;;AACA,SAASC,IAAT,QAAqB,YAArB,C,CAEA;;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MACtBC,MADsB,QACtBA,MADsB;AAAA,MAEtBC,QAFsB,QAEtBA,QAFsB;AAAA,MAGtBC,SAHsB,QAGtBA,SAHsB;AAAA,MAItBC,KAJsB,QAItBA,KAJsB;AAAA,MAKtBC,KALsB,QAKtBA,KALsB;AAAA,MAMtBC,IANsB,QAMtBA,IANsB;AAAA,MAOtBC,MAPsB,QAOtBA,MAPsB;AAAA,MAQtBC,KARsB,QAQtBA,KARsB;AAAA,sBAUtB,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEP,MADV;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,KAAK,EAAEG;AALT,KAMGF,IAAI,iBACH,oBAAC,UAAD;AAAY,mBAAY,MAAxB;AAA+B,IAAA,IAAI,EAAEA,IAArC;AAA2C,IAAA,MAAM,EAAEC,MAAnD;AAA2D,IAAA,IAAI,EAAC;AAAhE,IAPJ,EASGL,QATH,CAVsB;AAAA,CAAjB;AAAMF,Q;AAuBb,IAAMS,YAAY,GAAGV,GAAH,kHAAlB;AAIA,IAAMW,WAAW,GAAGX,GAAH,wPAAjB;AAcA,IAAMY,WAAW,GAAGZ,GAAH,8HAAjB;AAKA,IAAMa,UAAU,GAAGd,MAAM,CAACe,EAAV,yHAEZ;AAAA,MAAGZ,MAAH,SAAGA,MAAH;AAAA,MAAWI,KAAX,SAAWA,KAAX;AAAA,MAAkBD,KAAlB,SAAkBA,KAAlB;AAAA,SAA8B,CAACH,MAAM,IAAII,KAAV,IAAmBD,KAApB,KAA8BO,WAA5D;AAAA,CAFY,EAGZ;AAAA,MAAGV,MAAH,SAAGA,MAAH;AAAA,MAAWG,KAAX,SAAWA,KAAX;AAAA,SAAuB,CAACH,MAAM,IAAIG,KAAX,KAAqBK,YAA5C;AAAA,CAHY,EAIZ;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,IAAIM,WAAxB;AAAA,CAJY,CAAhB;AAOA,IAAMI,UAAU,GAAGhB,MAAM,CAACD,IAAD,CAAT,sIACL;AAAA,MAAGkB,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,SAA5B;AAAA,CADK,CAAhB;AAMAjB,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,MAAM,EAAEP,IADW;AAEnBQ,EAAAA,QAAQ,EAAEP,IAAI,CAACwB,UAFI;AAGnBf,EAAAA,KAAK,EAAEV,IAHY;AAInBW,EAAAA,KAAK,EAAEX,IAJY;AAKnBY,EAAAA,IAAI,EAAEV,MALa;AAMnBW,EAAAA,MAAM,EAAEX;AANW,CAArB","sourcesContent":["/**\n * List Item\n */\n\n// React\nimport React from 'react'\nimport { bool, node, string } from 'prop-types'\n\n// UI\nimport { Icon } from '../../icon'\n\n// Style\nimport styled, { css } from 'styled-components'\n\nexport const ListItem = ({\n  border,\n  children,\n  className,\n  flush,\n  group,\n  icon,\n  prefix,\n  style\n}) => (\n  <StyledItem\n    border={border}\n    className={className}\n    flush={flush}\n    group={group}\n    style={style}>\n    {icon && (\n      <StyledIcon aria-hidden=\"true\" icon={icon} prefix={prefix} size=\"2x\" />\n    )}\n    {children}\n  </StyledItem>\n)\n\nconst borderStyles = css`\n  border: 1px solid rgba(0, 0, 0, 0.125);\n`\n\nconst flushStyles = css`\n  border-right: 0;\n  border-left: 0;\n  border-radius: 0;\n\n  &:first-child {\n    border-top: 0;\n  }\n  &:last-child {\n    border-bottom: 0;\n    margin-bottom: 0;\n  }\n`\n\nconst groupStyles = css`\n  margin-bottom: -1px;\n  padding: 0.75rem 1.25rem;\n`\n\nconst StyledItem = styled.li`\n  position: relative;\n  ${({ border, group, flush }) => (border || group || flush) && groupStyles}\n  ${({ border, flush }) => (border || flush) && borderStyles}\n  ${({ flush }) => flush && flushStyles}\n`\n\nconst StyledIcon = styled(Icon)`\n  color: ${({ theme }) => theme.COLOUR.secondary};\n  float: left;\n  margin: 0.1rem 1rem 0 0;\n`\n\nListItem.propTypes = {\n  border: bool,\n  children: node.isRequired,\n  flush: bool,\n  group: bool,\n  icon: string,\n  prefix: string\n}\n"],"file":"listItem.js"}