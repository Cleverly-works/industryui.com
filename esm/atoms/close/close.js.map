{"version":3,"sources":["../../../components/atoms/close/close.js"],"names":["React","any","func","oneOf","string","Button","Icon","THEME_CONTEXT","styled","Close","className","click","context","icon","prefix","StyledButton","theme","COLOUR","propTypes","isRequired","Object","values","defaultProps"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,MAA3B,QAAyC,YAAzC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,+BAA9B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAiD;AAAA,MAA9CC,SAA8C,QAA9CA,SAA8C;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACpE,sBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEJ,SAAzB;AAAoC,IAAA,OAAO,EAAEE,OAA7C;AAAsD,IAAA,OAAO,EAAED;AAA/D,kBACE,oBAAC,IAAD;AAAM,mBAAY,MAAlB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAA2C,IAAA,IAAI,EAAEC,IAAjD;AAAuD,IAAA,MAAM,EAAEC;AAA/D,IADF,CADF;AAKD,CANM;AAAML,K;AAQb,IAAMM,YAAY,GAAGP,MAAM,CAACH,MAAD,CAAT,8aAGP;AAAA,MAAGO,OAAH,SAAGA,OAAH;AAAA,MAAYI,KAAZ,SAAYA,KAAZ;AAAA,SAAwBA,KAAK,CAACC,MAAN,CAAaL,OAAb,CAAxB;AAAA,CAHO,CAAlB;AAsBAH,KAAK,CAACS,SAAN,GAAkB;AAChBR,EAAAA,SAAS,EAAET,GADK;AAEhBU,EAAAA,KAAK,EAAET,IAAI,CAACiB,UAFI;AAGhBP,EAAAA,OAAO,EAAET,KAAK,CAACiB,MAAM,CAACC,MAAP,CAAcd,aAAd,CAAD,CAHE;AAIhBM,EAAAA,IAAI,EAAET,MAJU;AAKhBU,EAAAA,MAAM,EAAEV;AALQ,CAAlB;AAQAK,KAAK,CAACa,YAAN,GAAqB;AACnBV,EAAAA,OAAO,EAAE,MADU;AAEnBC,EAAAA,IAAI,EAAE,cAFa;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB","sourcesContent":["/**\n * Close\n */\n\n// React\nimport React from 'react'\nimport { any, func, oneOf, string } from 'prop-types'\n\n// UI\nimport { Button } from '../../atoms/button'\nimport { Icon } from '../../'\nimport { THEME_CONTEXT } from '../../theme/constants/context'\n\n// Style\nimport styled from 'styled-components'\n\nexport const Close = ({ className, click, context, icon, prefix }) => {\n  return (\n    <StyledButton className={className} context={context} onClick={click}>\n      <Icon aria-hidden=\"true\" context={context} icon={icon} prefix={prefix} />\n    </StyledButton>\n  )\n}\n\nconst StyledButton = styled(Button)`\n  background-color: transparent;\n  border: 0;\n  color: ${({ context, theme }) => theme.COLOUR[context]};\n  cursor: pointer;\n  float: right;\n  font-size: 1.5rem;\n  height: auto;\n  line-height: 0;\n  margin: 0;\n  padding: 0;\n  text-shadow: 0 1px 0 #fff;\n  z-index: 10000;\n\n  &:hover {\n    background-color: transparent;\n    color: #000;\n    opacity: 0.8;\n    text-decoration: none;\n  }\n`\n\nClose.propTypes = {\n  className: any,\n  click: func.isRequired,\n  context: oneOf(Object.values(THEME_CONTEXT)),\n  icon: string,\n  prefix: string\n}\n\nClose.defaultProps = {\n  context: 'dark',\n  icon: 'times-circle',\n  prefix: 'fas'\n}\n"],"file":"close.js"}