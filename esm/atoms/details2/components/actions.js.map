{"version":3,"sources":["../../../../components/atoms/details2/components/actions.js"],"names":["React","bool","func","node","number","string","styled","Details2Actions","animationtime","children","content","handleOpenClose","iconComponent","isOpen","title","endActionComponent","startActionComponent","toolbar","ActionsDivider","div","theme","COLOUR","dark","ToolbarWrapper","StartActionComponentWrapper","ActionsWrapper","propTypes","isRequired"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAiD,YAAjD,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAWzB;AAAA,MAVJC,aAUI,QAVJA,aAUI;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJC,OAQI,QARJA,OAQI;AAAA,MAPJC,eAOI,QAPJA,eAOI;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,kBAGI,QAHJA,kBAGI;AAAA,MAFJC,oBAEI,QAFJA,oBAEI;AAAA,MADJC,OACI,QADJA,OACI;AACJ;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,oBAAC,cAAD,qBACE,oBAAC,2BAAD,QACGD,oBADH,EACyB,GADzB,EAEG,CAACC,OAAO,IAAIF,kBAAZ,kBAAmC,oBAAC,cAAD,OAFtC,CADF,eAME,oBAAC,cAAD,QACGE,OADH,EAEGF,kBAAkB,iBAAI,oBAAC,cAAD,OAFzB,CANF,EAWGA,kBAXH,CADF;AAeD,CAnEM;AAAMR,e;AAqEb,IAAMW,cAAc,GAAGZ,MAAM,CAACa,GAAV,sJACE;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,IAA5B;AAAA,CADF,CAApB;AAOA,IAAMC,cAAc,GAAGjB,MAAM,CAACa,GAAV,mHAApB;AAKA,IAAMK,2BAA2B,GAAGlB,MAAM,CAACa,GAAV,mHAAjC;AAKA,IAAMM,cAAc,GAAGnB,MAAM,CAACa,GAAV,mHAApB;AAKAZ,eAAe,CAACmB,SAAhB,GAA4B;AAC1BlB,EAAAA,aAAa,EAAEJ,MADW;AAE1BK,EAAAA,QAAQ,EAAEN,IAFgB;AAG1BO,EAAAA,OAAO,EAAEP,IAHiB;AAI1BQ,EAAAA,eAAe,EAAET,IAAI,CAACyB,UAJI;AAK1Bf,EAAAA,aAAa,EAAET,IALW;AAM1BU,EAAAA,MAAM,EAAEZ,IANkB;AAO1Ba,EAAAA,KAAK,EAAET,MAAM,CAACsB;AAPY,CAA5B","sourcesContent":["/**\n * Components - Atoms - Details2 - Components - Header\n */\n\n// React\nimport React from 'react'\nimport { bool, func, node, number, string } from 'prop-types'\n\n// Style\nimport styled from 'styled-components'\n\nexport const Details2Actions = ({\n  animationtime,\n  children,\n  content,\n  handleOpenClose,\n  iconComponent,\n  isOpen,\n  title,\n  endActionComponent,\n  startActionComponent,\n  toolbar\n}) => {\n  // const animationtime = disableAnimation ? 0 : animationDuration\n  // const [isOpen, setisOpen] = useState(open)\n\n  // const contentRef = useRef(null)\n\n  // useEffect(() => {\n  //   if (unmountContentOnClose) {\n  //     isOpen\n  //       ? setchildrenMounted(() => true)\n  //       : setTimeout(() => {\n  //           window &&\n  //             window.requestAnimationFrame(() => {\n  //               setchildrenMounted(() => false)\n  //             })\n  //         }, animationtime ?? 300)\n  //   }\n  //   setTimeout(\n  //     () => {\n  //       window &&\n  //         window.requestAnimationFrame(() => {\n  //           contentRef.current && setcontentHeight(() => contentRef.current.offsetHeight)\n  //         })\n  //     },\n  //     !isOpen ? animationtime ?? 300 : 0\n  //   )\n\n  //   return () => {}\n  // }, [contentRef.current, isOpen])\n\n  // const handleEventRecieve = e => {\n  //   setisOpen(e)\n  // }\n\n  // useComponentCommunication({\n  //   id: uniqueId,\n  //   messageName: MessageNames.DetailsComponent.SET_OPEN,\n  //   onRecieve: e => handleEventRecieve(e),\n  //   subscriber: DetailsSubscriber\n  // })\n\n  return (\n    <ActionsWrapper>\n      <StartActionComponentWrapper>\n        {startActionComponent}{' '}\n        {(toolbar || endActionComponent) && <ActionsDivider />}\n      </StartActionComponentWrapper>\n\n      <ToolbarWrapper>\n        {toolbar}\n        {endActionComponent && <ActionsDivider />}\n      </ToolbarWrapper>\n\n      {endActionComponent}\n    </ActionsWrapper>\n  )\n}\n\nconst ActionsDivider = styled.div`\n  background-color: ${({ theme }) => theme.COLOUR.dark};\n  height: 1rem;\n  margin: 0 1rem;\n  width: 2px;\n`\n\nconst ToolbarWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StartActionComponentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst ActionsWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nDetails2Actions.propTypes = {\n  animationtime: number,\n  children: node,\n  content: node,\n  handleOpenClose: func.isRequired,\n  iconComponent: node,\n  isOpen: bool,\n  title: string.isRequired\n}\n"],"file":"actions.js"}