{"version":3,"sources":["../../../components/blog/categories/categories.js"],"names":["React","Fragment","any","object","BlogCard","Column","Heading","Link","Row","slugify","styled","BlogCategories","articles","config","_uniqueCategories","uniqueCategories","Set","map","article","category","_find","categories","filter","homepage","sort","a","b","Date","date","slice","index","as","path","href","pathname","query","StyledHeading","propTypes","isRequired"],"mappings":"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","sourcesContent":["/**\n * Blog - Categories\n * Displays two article cards from each category.\n *\n * - Only shows if homepage is not false\n * - Sorted and filtered by date.\n */\n\n// React\nimport React, { Fragment } from 'react'\nimport { any, object } from 'prop-types'\n\n// UI\nimport { BlogCard, Column, Heading, Link, Row, slugify } from '../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const BlogCategories = ({ articles, config }) => {\n  const _uniqueCategories = () => {\n    const uniqueCategories = [\n      ...new Set(articles.map((article) => article.category))\n    ]\n    return uniqueCategories\n  }\n\n  const _find = () => {\n    const categories = _uniqueCategories()\n\n    return categories.map((category) => {\n      return articles\n        .filter((article) => {\n          return article.category === category && article.homepage !== false\n        })\n        .sort((a, b) => {\n          return new Date(b.date) - new Date(a.date)\n        })\n        .slice(0, 2)\n    })\n  }\n\n  return (\n    <section>\n      {_find().map((articles, index) => (\n        <Fragment key={index}>\n          <Link\n            to={{\n              as: `${config.path}/${slugify(articles[0].category)}`,\n              href: {\n                pathname: `${config.path}/category`,\n                query: {\n                  category: slugify(articles[0].category)\n                }\n              }\n            }}>\n            <StyledHeading content={articles[0].category} tag=\"h2\" />\n          </Link>\n\n          <Row>\n            {articles.map((article, index) => (\n              <Column key={index} md={6}>\n                <BlogCard article={article} config={config} />\n              </Column>\n            ))}\n          </Row>\n        </Fragment>\n      ))}\n    </section>\n  )\n}\n\nconst StyledHeading = styled(Heading)`\n  font-size: 1.5rem;\n  margin-top: 2rem;\n  text-align: center;\n\n  &:hover {\n    color: #00ccbc;\n  }\n`\n\nBlogCategories.propTypes = {\n  articles: any.isRequired,\n  config: object.isRequired\n}\n"],"file":"categories.js"}