{"version":3,"sources":["../../../components/blog/category/category.js"],"names":["React","any","bool","object","oneOfType","shape","string","styled","Link","slugify","BlogCategory","author","config","className","style","to","path","as","href","pathname","query","category","toUpperCase","replace","StyledCategory","div","propTypes","isRequired","passHref","prefetch"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,SAA5B,EAAuCC,KAAvC,EAA8CC,MAA9C,QAA4D,YAA5D,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,QAA9B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA8C;AAAA,MAA3CC,MAA2C,QAA3CA,MAA2C;AAAA,MAAnCC,MAAmC,QAAnCA,MAAmC;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,MAATC,EAAS,QAATA,EAAS;AACxE,MAAMC,IAAI,GAAGP,OAAO,CAACM,EAAD,CAApB;AAEA,sBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEF,SAA3B;AAAsC,IAAA,KAAK,EAAEC;AAA7C,kBACE,oBAAC,IAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAE;AACFG,MAAAA,EAAE,YAAKL,MAAM,CAACI,IAAZ,cAAoBA,IAApB,CADA;AAEFE,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAER,MAAM,aACTC,MAAM,CAACI,IADE,yBAETJ,MAAM,CAACI,IAFE,cADZ;AAIJI,QAAAA,KAAK,EAAE;AACLT,UAAAA,MAAM,EAAEK,IADH;AAELK,UAAAA,QAAQ,EAAEL;AAFL;AAJH;AAFJ;AAFN,KAcGA,IAAI,CAACM,WAAL,GAAmBC,OAAnB,CAA2B,GAA3B,EAAgC,GAAhC,CAdH,CADF,CADF;AAoBD,CAvBM;AAAMb,Y;AAyBb,IAAMc,cAAc,GAAGjB,MAAM,CAACkB,GAAV,4KAApB;AAQAf,YAAY,CAACgB,SAAb,GAAyB;AACvBf,EAAAA,MAAM,EAAET,IADe;AAEvBW,EAAAA,SAAS,EAAEZ,GAFY;AAGvBW,EAAAA,MAAM,EAAET,MAAM,CAACwB,UAHQ;AAIvBb,EAAAA,KAAK,EAAEb,GAJgB;AAKvBc,EAAAA,EAAE,EAAEV,KAAK,CAAC;AACRuB,IAAAA,QAAQ,EAAE1B,IADF;AAER2B,IAAAA,QAAQ,EAAE3B,IAFF;AAGRa,IAAAA,EAAE,EAAEX,SAAS,CAAC,CAACD,MAAD,EAASG,MAAT,CAAD,CAAT,CAA4BqB;AAHxB,GAAD;AALc,CAAzB","sourcesContent":["/**\n * Components - Blog - Category\n */\n\n// React\nimport React from 'react'\nimport { any, bool, object, oneOfType, shape, string } from 'prop-types'\n\n// Style\nimport styled from 'styled-components'\n\n// UI\nimport { Link, slugify } from '../../'\n\nexport const BlogCategory = ({ author, config, className, style, to }) => {\n  const path = slugify(to)\n\n  return (\n    <StyledCategory className={className} style={style}>\n      <Link\n        passHref\n        to={{\n          as: `${config.path}/${path}`,\n          href: {\n            pathname: author\n              ? `${config.path}/author`\n              : `${config.path}/category`,\n            query: {\n              author: path,\n              category: path\n            }\n          }\n        }}>\n        {path.toUpperCase().replace('-', ' ')}\n      </Link>\n    </StyledCategory>\n  )\n}\n\nconst StyledCategory = styled.div`\n  display: inline;\n  font-size: 12px;\n  margin-bottom: 5px;\n  position: relative;\n  z-index: 2;\n`\n\nBlogCategory.propTypes = {\n  author: bool,\n  className: any,\n  config: object.isRequired,\n  style: any,\n  to: shape({\n    passHref: bool,\n    prefetch: bool,\n    to: oneOfType([object, string]).isRequired\n  })\n}\n"],"file":"category.js"}