{"version":3,"sources":["../../../../components/blog/sidebar/components/list.js"],"names":["React","Fragment","array","bool","object","Badge","Link","slugify","Truncate","styled","BlogList","author","config","list","map","index","badge","category","name","to","as","path","href","pathname","query","articleSlug","StyledDl","dl","StyledDt","dt","StyledDd","dd","StyledA","span","props","propTypes","isRequired","defaultProps"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,YAApC,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,QAA/B,QAA+C,WAA/C,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8B;AAAA,MAA3BC,MAA2B,QAA3BA,MAA2B;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACpD,sBACE,oBAAC,QAAD,QACGA,IAAI,CAACC,GAAL,CAAS,iBAAqCC,KAArC;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,+BAAUC,QAAV;AAAA,QAAUA,QAAV,+BAAqB,EAArB;AAAA,QAAyBC,IAAzB,SAAyBA,IAAzB;AAAA,QAA+BC,EAA/B,SAA+BA,EAA/B;AAAA,wBACR,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEJ;AAAf,oBACE,oBAAC,QAAD,qBACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEC;AAAhB,MADF,CADF,eAKE,oBAAC,QAAD,qBACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAE;AACFI,QAAAA,EAAE,YAAKR,MAAM,CAACS,IAAZ,cACAJ,QAAQ,IAAIV,OAAO,CAACU,QAAD,CAAP,GAAoB,GADhC,SAECV,OAAO,CAACY,EAAD,CAFR,CADA;AAIFG,QAAAA,IAAI,EAAE;AACJC,UAAAA,QAAQ,EAAEZ,MAAM,aACTC,MAAM,CAACS,IADE,yBAETT,MAAM,CAACS,IAFE,aADZ;AAIJG,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAElB,OAAO,CAACY,EAAD,CADf;AAELR,YAAAA,MAAM,EAAEJ,OAAO,CAACY,EAAD,CAFV;AAGLF,YAAAA,QAAQ,EAAEA,QAAQ,IAAIV,OAAO,CAACU,QAAD;AAHxB;AAJH;AAJJ,OADN;AAgBE,MAAA,QAAQ;AAhBV,oBAiBE,oBAAC,OAAD,QAAUC,IAAV,CAjBF,CADF,CALF,CADQ;AAAA,GAAT,CADH,CADF;AAiCD,CAlCM;AAAMR,Q;AAoCb,IAAMgB,QAAQ,GAAGjB,MAAM,CAACkB,EAAV,iIAAd;AAMA,IAAMC,QAAQ,GAAGnB,MAAM,CAACoB,EAAV,6LAAd;AASA,IAAMC,QAAQ,GAAGrB,MAAM,CAACsB,EAAV,4NAAd;AAUA,IAAMC,OAAO,GAAGvB,MAAM,CAACwB,IAAV,kFACT,UAACC,KAAD;AAAA,SAAW1B,QAAQ,CAAC,OAAD,CAAnB;AAAA,CADS,CAAb;AAIAE,QAAQ,CAACyB,SAAT,GAAqB;AACnBxB,EAAAA,MAAM,EAAER,IADW;AAEnBS,EAAAA,MAAM,EAAER,MAAM,CAACgC,UAFI;AAGnBvB,EAAAA,IAAI,EAAEX,KAAK,CAACkC;AAHO,CAArB;AAMA1B,QAAQ,CAAC2B,YAAT,GAAwB;AACtB1B,EAAAA,MAAM,EAAE;AADc,CAAxB","sourcesContent":["/**\n * Blog - List\n */\n\n// React\nimport React, { Fragment } from 'react'\nimport { array, bool, object } from 'prop-types'\n\n// UI\nimport { Badge, Link, slugify, Truncate } from '../../../'\n\n// Style\nimport styled from 'styled-components'\n\nexport const BlogList = ({ author, config, list }) => {\n  return (\n    <StyledDl>\n      {list.map(({ badge, category = '', name, to }, index) => (\n        <Fragment key={index}>\n          <StyledDt>\n            <Badge content={badge} />\n          </StyledDt>\n\n          <StyledDd>\n            <Link\n              to={{\n                as: `${config.path}/${\n                  category && slugify(category) + '/'\n                }${slugify(to)}`,\n                href: {\n                  pathname: author\n                    ? `${config.path}/author`\n                    : `${config.path}/article`,\n                  query: {\n                    articleSlug: slugify(to),\n                    author: slugify(to),\n                    category: category && slugify(category)\n                  }\n                }\n              }}\n              passHref>\n              <StyledA>{name}</StyledA>\n            </Link>\n          </StyledDd>\n        </Fragment>\n      ))}\n    </StyledDl>\n  )\n}\n\nconst StyledDl = styled.dl`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -15px;\n`\n\nconst StyledDt = styled.dt`\n  flex: 0 0 25%;\n  max-width: 25%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding: 0 1rem;\n`\n\nconst StyledDd = styled.dd`\n  flex: 0 0 75%;\n  max-width: 75%;\n  position: relative;\n  margin-left: 0;\n  min-height: 1px;\n  padding: 0.2rem 1rem 0 1rem;\n  width: 100%;\n`\n\nconst StyledA = styled.span`\n  ${(props) => Truncate('100px')}\n`\n\nBlogList.propTypes = {\n  author: bool,\n  config: object.isRequired,\n  list: array.isRequired\n}\n\nBlogList.defaultProps = {\n  author: false\n}\n"],"file":"list.js"}