{"version":3,"sources":["../../../components/blog/sidebar/tag-cloud.js"],"names":["React","useEffect","useState","array","number","slugify","BlogSection","BlogTagCloud","articles","total","cloud","setCloud","_find","tagArray","forEach","tags","tag","push","propTypes","isRequired","defaultProps"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,YAA9B,C,CAEA;AACA;AAEA;;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAyB;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACzBP,QAAQ,CAAC,EAAD,CADiB;AAAA;AAAA,MAC5CQ,KAD4C;AAAA,MACrCC,QADqC;;AAGnDV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACC,KAAK,EAAN,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAMC,QAAQ,GAAG,EAAjB;AAEAL,IAAAA,QAAQ,CAACM,OAAT,CAAiB,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;;AAC7B,UAAI,CAACA,IAAL,EAAW;AACT,eAAO,EAAP;AACD;;AAH4B,iDAKXA,IALW;AAAA;;AAAA;AAK7B,4DAAwB;AAAA,cAAbC,GAAa;AACtBH,UAAAA,QAAQ,CAACI,IAAT,CAAcZ,OAAO,CAACW,GAAD,CAArB;AACD;AAP4B;AAAA;AAAA;AAAA;AAAA;AAQ9B,KARD,EAHkB,CAalB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAtCD,CAPmD,CA+CnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBAAO,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC;AAArB,KAA6BN,KAA7B,CAAP;AACD,CA1DM;AAAMH,Y;AA4DbA,YAAY,CAACW,SAAb,GAAyB;AACvBV,EAAAA,QAAQ,EAAEL,KAAK,CAACgB,UADO;AAEvBV,EAAAA,KAAK,EAAEL;AAFgB,CAAzB;AAKAG,YAAY,CAACa,YAAb,GAA4B;AAC1BX,EAAAA,KAAK,EAAE;AADmB,CAA5B","sourcesContent":["/**\n * Blog - Tag Cloud\n * List the 20 most prominent tags from all the articles.\n *\n * - Collate all the tags from all the articles\n * - Choose the top 20 most prominent tags\n * - Provide each a weight based on how many there are\n * - Randomly show them in a cloud\n */\n\n// React\nimport React, { useEffect, useState } from 'react'\nimport { array, number } from 'prop-types'\n\n// Lodash\n// import countBy from 'lodash/countBy'\n\n// UI\nimport { slugify } from '../../'\nimport { BlogSection } from './components'\n\nexport const BlogTagCloud = ({ articles, total }) => {\n  const [cloud, setCloud] = useState([])\n\n  useEffect(() => {\n    setCloud(_find())\n  }, [])\n\n  const _find = () => {\n    const tagArray = []\n\n    articles.forEach(({ tags }) => {\n      if (!tags) {\n        return []\n      }\n\n      for (const tag of tags) {\n        tagArray.push(slugify(tag))\n      }\n    })\n\n    // const tagsCounted = countBy(tagArray)\n\n    // Sort\n    // const tagsSorted = Object\n    //   .entries(tagsCounted)\n    //   .sort((a, b) => { return tagsCounted[b] - tagsCounted[a] })\n    //   // .map(key => {\n    //   //   key\n    //   // })\n\n    // newO[key] = list[key]\n\n    // return countBy(tagArray)\n\n    // .filter((article) => {\n    //   return (article.category !== 'terms' && article.homepage !== false)\n    // })\n    // .sort((a, b) => {\n    //   return new Date(b.date) - new Date(a.date)\n    // })\n    // .slice(0, total)\n    // .map((opt) => ({\n    //   tag: 'Deliveroo',\n    //   count: 10\n    // }))\n  }\n\n  // const data = [\n  //   { value: 'JavaScript', count: 38 },\n  //   { value: 'React', count: 30 },\n  //   { value: 'Nodejs', count: 28 },\n  //   { value: 'Express.js', count: 25 },\n  //   { value: 'HTML5', count: 33 },\n  //   { value: 'MongoDB', count: 18 },\n  //   { value: 'CSS3', count: 20 }\n  // ]\n\n  return <BlogSection heading=\"Tags\">{cloud}</BlogSection>\n}\n\nBlogTagCloud.propTypes = {\n  articles: array.isRequired,\n  total: number\n}\n\nBlogTagCloud.defaultProps = {\n  total: 5\n}\n"],"file":"tag-cloud.js"}