{"version":3,"sources":["../../../components/blog/sidebar/author.js"],"names":["React","useEffect","useState","array","number","object","slugify","BlogList","BlogSection","BlogAuthor","articles","config","total","list","setList","_find","counts","filter","article","category","homepage","reduce","p","c","author","Object","prototype","hasOwnProperty","call","countsMapped","keys","v","map","k","badge","name","to","propTypes","isRequired","defaultProps"],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,YAAtC,C,CAEA;;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAiC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACjCV,QAAQ,CAAC,EAAD,CADyB;AAAA;AAAA,MAClDW,IADkD;AAAA,MAC5CC,OAD4C;;AAGzDb,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,OAAO,CAACC,KAAK,EAAN,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAMC,MAAM,GAAGN,QAAQ,CAEpBO,MAFY,CAEL,UAACC,OAAD,EAAa;AACnB,aAAOA,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgCD,OAAO,CAACE,QAAR,KAAqB,KAA5D;AACD,KAJY,EAMZC,MANY,CAML,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChB,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;;AAEA,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,CAArC,EAAwCE,MAAxC,CAAL,EAAsD;AACpDF,QAAAA,CAAC,CAACE,MAAD,CAAD,GAAY,CAAZ;AACD;;AAEDF,MAAAA,CAAC,CAACE,MAAD,CAAD;AAEA,aAAOF,CAAP;AACD,KAhBY,EAgBV,EAhBU,CAAf;AAkBA,QAAMO,YAAY,GAAGJ,MAAM,CAACK,IAAP,CAAYd,MAAZ,EAClBC,MADkB,CACX,UAACC,OAAD,EAAUa,CAAV,EAAgB;AACtB,aAAOb,OAAO,KAAK,WAAnB;AACD,KAHkB,EAIlBc,GAJkB,CAId,UAACC,CAAD,EAAO;AACV,aAAO;AACLC,QAAAA,KAAK,EAAED,CADF;AAELE,QAAAA,IAAI,EAAEnB,MAAM,CAACiB,CAAD,CAFP;AAGLG,QAAAA,EAAE,YAAK9B,OAAO,CAAC2B,CAAD,CAAZ;AAHG,OAAP;AAKD,KAVkB,CAArB;AAYA,WAAOJ,YAAP;AACD,GAhCD;;AAkCA,sBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC;AAArB,kBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAElB,MAAlB;AAA0B,IAAA,MAAM,MAAhC;AAAiC,IAAA,IAAI,EAAEE;AAAvC,IADF,CADF;AAKD,CA9CM;AAAMJ,U;AAgDbA,UAAU,CAAC4B,SAAX,GAAuB;AACrB3B,EAAAA,QAAQ,EAAEP,KAAK,CAACmC,UADK;AAErB3B,EAAAA,MAAM,EAAEN,MAAM,CAACiC,UAFM;AAGrB1B,EAAAA,KAAK,EAAER;AAHc,CAAvB;AAMAK,UAAU,CAAC8B,YAAX,GAA0B;AACxB3B,EAAAA,KAAK,EAAE;AADiB,CAA1B","sourcesContent":["/**\n * Blog - Author\n * List the 5 Authors who have written the most\n */\n\n// React\nimport React, { useEffect, useState } from 'react'\nimport { array, number, object } from 'prop-types'\n\n// UI\nimport { slugify } from '../../'\nimport { BlogList, BlogSection } from './components'\n\nexport const BlogAuthor = ({ articles, config, total }) => {\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    setList(_find())\n  }, [])\n\n  const _find = () => {\n    const counts = articles\n\n      .filter((article) => {\n        return article.category !== 'terms' && article.homepage !== false\n      })\n\n      .reduce((p, c) => {\n        const author = c.author\n\n        if (!Object.prototype.hasOwnProperty.call(p, author)) {\n          p[author] = 0\n        }\n\n        p[author]++\n\n        return p\n      }, {})\n\n    const countsMapped = Object.keys(counts)\n      .filter((article, v) => {\n        return article !== 'undefined'\n      })\n      .map((k) => {\n        return {\n          badge: k,\n          name: counts[k],\n          to: `${slugify(k)}`\n        }\n      })\n\n    return countsMapped\n  }\n\n  return (\n    <BlogSection heading=\"Author\">\n      <BlogList config={config} author list={list} />\n    </BlogSection>\n  )\n}\n\nBlogAuthor.propTypes = {\n  articles: array.isRequired,\n  config: object.isRequired,\n  total: number\n}\n\nBlogAuthor.defaultProps = {\n  total: 5\n}\n"],"file":"author.js"}