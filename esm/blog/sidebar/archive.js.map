{"version":3,"sources":["../../../components/blog/sidebar/archive.js"],"names":["React","useEffect","useState","array","number","object","formatIntDateYear","BlogList","BlogSection","BlogArchive","articles","config","total","list","setList","_find","counts","filter","article","category","homepage","reduce","p","c","year","Date","date","Object","prototype","hasOwnProperty","call","countsMapped","keys","map","k","badge","name","to","reverse","propTypes","isRequired","defaultProps"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,YAAtC,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBAClCV,QAAQ,CAAC,EAAD,CAD0B;AAAA;AAAA,MACnDW,IADmD;AAAA,MAC7CC,OAD6C;;AAG1Db,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,OAAO,CAACC,KAAK,EAAN,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAMC,MAAM,GAAGN,QAAQ,CAEpBO,MAFY,CAEL,UAACC,OAAD,EAAa;AACnB,aAAOA,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgCD,OAAO,CAACE,QAAR,KAAqB,KAA5D;AACD,KAJY,EAMZC,MANY,CAML,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAChB,UAAMC,IAAI,GAAGlB,iBAAiB,CAAC,IAAImB,IAAJ,CAASF,CAAC,CAACG,IAAX,CAAD,CAA9B;;AAEA,UAAI,CAACC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCE,IAAxC,CAAL,EAAoD;AAClDF,QAAAA,CAAC,CAACE,IAAD,CAAD,GAAU,CAAV;AACD;;AAEDF,MAAAA,CAAC,CAACE,IAAD,CAAD;AAEA,aAAOF,CAAP;AACD,KAhBY,EAgBV,EAhBU,CAAf;AAkBA,QAAMS,YAAY,GAAGJ,MAAM,CAACK,IAAP,CAAYhB,MAAZ,EAClBiB,GADkB,CACd,UAACC,CAAD,EAAO;AACV,aAAO;AACLC,QAAAA,KAAK,EAAED,CADF;AAELE,QAAAA,IAAI,EAAEpB,MAAM,CAACkB,CAAD,CAFP;AAGLG,QAAAA,EAAE,oBAAaH,CAAb;AAHG,OAAP;AAKD,KAPkB,EAQlBI,OARkB,EAArB;AAUA,WAAOP,YAAP;AACD,GA9BD;;AAgCA,sBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC;AAArB,kBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEpB,MAAlB;AAA0B,IAAA,IAAI,EAAEE;AAAhC,IADF,CADF;AAKD,CA5CM;AAAMJ,W;AA8CbA,WAAW,CAAC8B,SAAZ,GAAwB;AACtB7B,EAAAA,QAAQ,EAAEP,KAAK,CAACqC,UADM;AAEtB7B,EAAAA,MAAM,EAAEN,MAAM,CAACmC,UAFO;AAGtB5B,EAAAA,KAAK,EAAER;AAHe,CAAxB;AAMAK,WAAW,CAACgC,YAAZ,GAA2B;AACzB7B,EAAAA,KAAK,EAAE;AADkB,CAA3B","sourcesContent":["/**\n * Blog - Archive\n * Lists the years and total number of blogs in that year\n *\n * - Group the articles by the year they were written\n * - Link to the archive/yyyy page\n */\n\n// React\nimport React, { useEffect, useState } from 'react'\nimport { array, number, object } from 'prop-types'\n\n// UI\nimport { formatIntDateYear } from '../../'\nimport { BlogList, BlogSection } from './components'\n\nexport const BlogArchive = ({ articles, config, total }) => {\n  const [list, setList] = useState([])\n\n  useEffect(() => {\n    setList(_find())\n  }, [])\n\n  const _find = () => {\n    const counts = articles\n\n      .filter((article) => {\n        return article.category !== 'terms' && article.homepage !== false\n      })\n\n      .reduce((p, c) => {\n        const year = formatIntDateYear(new Date(c.date))\n\n        if (!Object.prototype.hasOwnProperty.call(p, year)) {\n          p[year] = 0\n        }\n\n        p[year]++\n\n        return p\n      }, {})\n\n    const countsMapped = Object.keys(counts)\n      .map((k) => {\n        return {\n          badge: k,\n          name: counts[k],\n          to: `archive/${k}`\n        }\n      })\n      .reverse()\n\n    return countsMapped\n  }\n\n  return (\n    <BlogSection heading=\"Archive\">\n      <BlogList config={config} list={list} />\n    </BlogSection>\n  )\n}\n\nBlogArchive.propTypes = {\n  articles: array.isRequired,\n  config: object.isRequired,\n  total: number\n}\n\nBlogArchive.defaultProps = {\n  total: 5\n}\n"],"file":"archive.js"}