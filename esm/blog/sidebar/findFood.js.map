{"version":3,"sources":["../../../components/blog/sidebar/findFood.js"],"names":["React","useState","oneOf","useForm","object","string","yupResolver","Button","FormError","Form","FormField","FormLabel","Icon","InputGroup","InputGroupAddon","Link","validatorPostCode","BlogSection","styled","schema","shape","postCode","required","test","value","BlogFindFood","colour","resolver","mode","errors","handleSubmit","register","msg","setMsg","url","domain","submit","data","window","fetch","then","response","ok","Error","statusText","json","res","open","error","message","background","borderColor","color","StyledContainer","div","props","StyledForm","StyledA","span","propTypes","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Blog - Find Food\n * Allows a user to link to Deliveroo\n *\n * There are two variants of the Find Food tool:\n * - Postcode entry as seen on: https://deliveroo.co.uk/\n *   - Calls API to get the location to redirect too\n * - Google Maps as seen on: https://deliveroo.ie/\n *\n * <script type=\"text/javascript\"\n * src=\"https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places\"></script>\n */\n\n// React\nimport React, { useState } from 'react'\nimport { oneOf } from 'prop-types'\n\n// React Hook Form\nimport { useForm } from 'react-hook-form'\n\n// Yup\nimport { object, string } from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\n// UI\nimport {\n  Button,\n  FormError,\n  Form,\n  FormField,\n  FormLabel,\n  Icon,\n  InputGroup,\n  InputGroupAddon,\n  Link,\n  validatorPostCode\n} from '../../'\n\nimport { BlogSection } from './components'\n\n// Style\nimport styled from 'styled-components'\n\nconst schema = object().shape({\n  postCode: string()\n    .required()\n    .test(\n      'is-valid',\n      \"We couldn't recognise that postcode - check and try again.\",\n      (value) => validatorPostCode(value)\n    )\n})\n\nexport const BlogFindFood = ({ colour }) => {\n  const { errors, handleSubmit, register } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onSubmit'\n  })\n  const [msg, setMsg] = useState(false)\n\n  const url = 'https://chat.drykiss.com/api/httpsDeliverooRestaurants'\n  const domain = 'deliveroo.co.uk'\n\n  const submit = (data) => {\n    // Fetch restaurant service\n    window\n      .fetch(`${url}/${domain}/${data.postCode}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n\n        return response.json()\n      })\n      .then((res) => {\n        window.open(`https://${domain}${res.url}`, '_self')\n      })\n      .catch((error) => {\n        setMsg(`We donâ€™t deliver there yet: ${error.message}`)\n      })\n  }\n\n  return (\n    <BlogSection>\n      <StyledContainer colour={colour}>\n        <StyledForm handleSubmit={handleSubmit(submit)}>\n          <FormLabel text=\"Your favourite restaurants, delivered.\">\n            <InputGroup>\n              <FormField\n                errors={errors}\n                register={register}\n                name=\"postCode\"\n                placeholder=\"Enter your postcode\"\n              />\n\n              <InputGroupAddon>\n                <Button\n                  content=\"Find food\"\n                  style={{ background: '#440063', borderColor: '#32004a' }}\n                  type=\"submit\"\n                />\n              </InputGroupAddon>\n\n              {errors.postCode && (\n                <FormError message={errors.postCode.message} />\n              )}\n              {msg && <div style={{ color: '#fff' }}>{msg}</div>}\n            </InputGroup>\n          </FormLabel>\n        </StyledForm>\n\n        <Link to={`https://${domain}`} passHref target=\"_blank\">\n          <StyledA>\n            Deliveroo <Icon icon=\"external-link\" />\n          </StyledA>\n        </Link>\n      </StyledContainer>\n    </BlogSection>\n  )\n}\n\nconst StyledContainer = styled.div`\n  background-color: ${(props) =>\n    props.colour === 'beetroot' ? '#e2004f' : '#4e0064'};\n  color: #fff;\n  line-height: 22px;\n  margin: 0 -10px;\n  padding: 30px 15px 20px;\n`\n\nconst StyledForm = styled(Form)`\n  .Form-label {\n    font-size: 2rem;\n    line-height: 2rem;\n    margin-bottom: 1.5rem;\n  }\n`\n\nconst StyledA = styled.span`\n  color: #fff;\n  display: block;\n  font-size: 0.75rem;\n  text-align: right;\n\n  &:hover,\n  &:focus {\n    color: #bdbaba;\n  }\n`\n\nBlogFindFood.propTypes = {\n  colour: oneOf(['beetroot', 'aubergine'])\n}\n\nBlogFindFood.defaultProps = {\n  colour: 'beetroot'\n}\n"],"file":"findFood.js"}