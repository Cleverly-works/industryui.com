{"version":3,"sources":["../../components/app/app.js"],"names":["React","any","bool","func","object","merge","ApolloProvider","App","TagManager","AuthorizationProvider","ConfigProvider","InternationalisationProvider","NotificationsProvider","OffCanvasProvider","PageProgressBar","Theme","ThemeStyle","UserProvider","ThemeProvider","MyApp","google","props","initialize","gtmId","analytics","offCanvas","user","layout","apolloClient","config","elements","Component","Layout","pageProps","pageProgressBar","router","theme","data","isRequired","icons"],"mappings":"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","sourcesContent":["/**\n * App\n *\n * @todo This is doing too much Apollo provider and GTM should be abstracted as options and the\n * providers sorted out\n */\n\n// React\nimport React from 'react'\nimport { any, bool, func, object } from 'prop-types'\n\n// Lodash\nimport merge from 'lodash/merge'\n\n// Apollo\nimport { ApolloProvider } from '@apollo/client'\n\n// Next\nimport App from 'next/app'\n\n// Google Tag Manager\nimport TagManager from 'react-gtm-module'\n\n// UI\nimport { AuthorizationProvider } from '../services/authorization/provider'\nimport {\n  ConfigProvider,\n  InternationalisationProvider,\n  NotificationsProvider,\n  OffCanvasProvider,\n  PageProgressBar,\n  Theme,\n  ThemeStyle,\n  UserProvider\n} from '../'\n\n// Style\nimport { ThemeProvider } from 'styled-components'\n\nexport class MyApp extends App {\n  static propTypes = {\n    apolloClient: object,\n    Component: func.isRequired,\n    config: object,\n    google: object,\n    icons: object,\n    Layout: any.isRequired,\n    offCanvas: bool,\n    pageProps: object,\n    pageProgressBar: bool,\n    theme: object,\n    user: bool\n  }\n\n  static defaultProps = {\n    offCanvas: false,\n    pageProgressBar: false,\n    theme: {},\n    user: false\n  }\n\n  componentDidMount() {\n    const { google } = this.props\n\n    if (google) {\n      TagManager.initialize({ gtmId: google.analytics })\n    }\n  }\n\n  elements() {\n    const { offCanvas, user } = this.props\n\n    return (\n      <>\n        <ThemeStyle />\n        {user && (\n          <UserProvider>\n            <AuthorizationProvider>\n              <InternationalisationProvider>\n                <NotificationsProvider>\n                  {offCanvas ? (\n                    <OffCanvasProvider>{this.layout()}</OffCanvasProvider>\n                  ) : (\n                    this.layout()\n                  )}\n                </NotificationsProvider>\n              </InternationalisationProvider>\n            </AuthorizationProvider>\n          </UserProvider>\n        )}\n\n        {!user && this.layout()}\n      </>\n    )\n  }\n\n  data() {\n    const { apolloClient, config } = this.props\n\n    return (\n      <>\n        <ConfigProvider config={config}>\n          {apolloClient ? (\n            <ApolloProvider client={apolloClient}>\n              {this.elements()}\n            </ApolloProvider>\n          ) : (\n            this.elements()\n          )}\n        </ConfigProvider>\n      </>\n    )\n  }\n\n  layout() {\n    const { Component, Layout, pageProps, pageProgressBar, router } = this.props\n\n    return (\n      <Layout>\n        {pageProgressBar && <PageProgressBar router={router} />}\n        <Component {...pageProps} />\n      </Layout>\n    )\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={merge(Theme, this.props.theme)}>\n        {this.data()}\n      </ThemeProvider>\n    )\n  }\n}\n"],"file":"app.js"}