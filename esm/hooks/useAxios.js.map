{"version":3,"sources":["../../components/hooks/useAxios.js"],"names":["useContext","useState","useEffect","axios","ConfigContext","useAxios","url","params","initialValue","apiConfig","isLoading","data","setData","bearerToken","window","localStorage","getItem","headers","Authorization","http","create","mocker","apply","fetchData","get","response","status"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AAEA;AACA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMC,MAAN,EAAcC,YAAd,EAA+B;AAAA,oBAC/BR,UAAU,CAACI,aAAD,CADqB;AAAA,MAC7CK,SAD6C,eAC7CA,SAD6C;;AAAA,kBAE7BR,QAAQ,iCAAMO,YAAN;AAAoBE,IAAAA,SAAS,EAAE;AAA/B,KAFqB;AAAA;AAAA,MAE9CC,IAF8C;AAAA,MAExCC,OAFwC;;AAIrDV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,WAAW,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAApB;;AAEA,QAAIH,WAAJ,EAAiB;AACfJ,MAAAA,SAAS,CAACQ,OAAV,CAAkBC,aAAlB,GAAkC,YAAYL,WAA9C;AACD;;AAED,QAAMM,IAAI,GAAGhB,KAAK,CAACiB,MAAN,CAAaX,SAAb,CAAb,CAPc,CASd;;AACA,QAAMY,MAAM,GAAG,EAAf;AACAA,IAAAA,MAAM,CAACC,KAAP,CAAaH,IAAb;;AAEA,QAAMI,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAESJ,IAAI,CAACK,GAAL,CAASlB,GAAT,EAAc;AAAEC,kBAAAA,MAAM,EAANA;AAAF,iBAAd,CAFT;;AAAA;AAERkB,gBAAAA,QAFQ;;AAGd,oBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3Bd,kBAAAA,OAAO,iCAAMa,QAAQ,CAACd,IAAf;AAAqBD,oBAAAA,SAAS,EAAE;AAAhC,qBAAP;AACD;;AALa;AAAA;;AAAA;AAAA;AAAA;AAORgB,gBAAAA,MAPQ,GAOC,YAAED,QAAF,GAAa,YAAEA,QAAF,CAAWC,MAAxB,GAAiC,GAPlC;AAQdd,gBAAAA,OAAO,CAAC;AAAEc,kBAAAA,MAAM,EAANA,MAAF;AAAUhB,kBAAAA,SAAS,EAAE;AAArB,iBAAD,CAAP;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATa,SAAS;AAAA;AAAA;AAAA,OAAf;;AAYAA,IAAAA,SAAS;AACV,GA1BQ,EA0BN,CAACjB,GAAD,CA1BM,CAAT;AA4BA,SAAO;AAAEK,IAAAA,IAAI,EAAJA;AAAF,GAAP;AACD,CAjCM","sourcesContent":["/**\n * Services - Hooks  - useAxios\n */\n\n// React\nimport { useContext, useState, useEffect } from 'react'\n\n// Axios\nimport axios from 'axios'\n\n// UI\nimport { ConfigContext } from '../services/config/context'\n\nexport const useAxios = (url, params, initialValue) => {\n  const { apiConfig } = useContext(ConfigContext)\n  const [data, setData] = useState({ ...initialValue, isLoading: true })\n\n  useEffect(() => {\n    const bearerToken = window.localStorage.getItem('bearerToken')\n\n    if (bearerToken) {\n      apiConfig.headers.Authorization = 'Bearer ' + bearerToken\n    }\n\n    const http = axios.create(apiConfig)\n\n    // Mock requests\n    const mocker = {}\n    mocker.apply(http)\n\n    const fetchData = async () => {\n      try {\n        const response = await http.get(url, { params })\n        if (response.status === 200) {\n          setData({ ...response.data, isLoading: false })\n        }\n      } catch (e) {\n        const status = e.response ? e.response.status : 404\n        setData({ status, isLoading: false })\n      }\n    }\n\n    fetchData()\n  }, [url])\n\n  return { data }\n}\n"],"file":"useAxios.js"}