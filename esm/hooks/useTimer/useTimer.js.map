{"version":3,"sources":["../../../components/hooks/useTimer/useTimer.js"],"names":["useEffect","useState","moment","useInterval","useTimer","autoStart","interval","startTime","endTime","getTime","diff","now","time","setTime","timer","setTimer","prev","start","stop","getFormattedTime","temp","duration","seconds","toString","padStart","minutes","hours","parseInt","asHours","exactHours","toFixed"],"mappings":";;AAAA;AACA;AACA;AAEA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,SAASC,QAAT,GAKC;AAAA,iFAAJ,EAAI;AAAA,4BAJNC,SAIM;AAAA,MAJNA,SAIM,+BAJM,IAIN;AAAA,2BAHNC,QAGM;AAAA,MAHNA,QAGM,8BAHK,IAGL;AAAA,MAFNC,SAEM,QAFNA,SAEM;AAAA,MADNC,OACM,QADNA,OACM;;AACN,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAIC,IAAI,GAAG,CAAX;AACA,QAAMC,GAAG,GAAGH,OAAO,GAAGN,MAAM,CAACM,OAAD,CAAT,GAAqBN,MAAM,EAA9C;;AACA,QAAI,OAAOK,SAAP,KAAqB,QAAzB,EAAmC;AACjCG,MAAAA,IAAI,GAAGC,GAAG,CAACD,IAAJ,KAAaR,MAAM,CAACK,SAAD,CAAN,CAAkBG,IAAlB,EAApB;AACD;;AACD,WAAOA,IAAI,GAAG,CAAC,CAAR,GAAYA,IAAZ,GAAmB,CAA1B;AACD,GAPD;;AADM,kBAUkBT,QAAQ,CAACQ,OAAO,EAAR,CAV1B;AAAA;AAAA,MAUCG,IAVD;AAAA,MAUOC,OAVP;;AAAA,mBAWoBZ,QAAQ,CAAC,IAAD,CAX5B;AAAA;AAAA,MAWCa,KAXD;AAAA,MAWQC,QAXR;;AAaNZ,EAAAA,WAAW,CAAC,YAAM;AAChBU,IAAAA,OAAO,CAAC,UAACG,IAAD;AAAA,aAAUA,IAAI,GAAGV,QAAjB;AAAA,KAAD,CAAP;AACD,GAFU,EAERQ,KAFQ,CAAX;;AAIA,MAAMG,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAI,CAACH,KAAL,EAAYC,QAAQ,CAACT,QAAD,CAAR;AACb,GAFD;;AAIA,MAAMY,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIK,SAAJ,EAAeY,KAAK;AACpB,WAAO,YAAM;AACXC,MAAAA,IAAI;AACL,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,QAAMC,IAAI,GAAGlB,MAAM,CAACmB,QAAP,CAAgBT,IAAhB,CAAb;AACA,WAAO;AACLU,MAAAA,OAAO,EAAEF,IAAI,CAACE,OAAL,GAAeC,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CADJ;AAELC,MAAAA,OAAO,EAAEL,IAAI,CAACK,OAAL,GAAeF,QAAf,GAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAFJ;AAGLE,MAAAA,KAAK,EAAEC,QAAQ,CAACP,IAAI,CAACQ,OAAL,EAAD,EAAiB,EAAjB,CAHV;AAILC,MAAAA,UAAU,EAAET,IAAI,CAACQ,OAAL,GAAeE,OAAf,CAAuB,CAAvB;AAJP,KAAP;AAMD,GARD;;AAUA,SAAO;AAAElB,IAAAA,IAAI,EAAEO,gBAAgB,EAAxB;AAA4BF,IAAAA,KAAK,EAALA,KAA5B;AAAmCC,IAAAA,IAAI,EAAJA;AAAnC,GAAP;AACD","sourcesContent":["/**\n * Components - Hooks - Use Timer\n */\n\n// React\nimport { useEffect, useState } from 'react'\n\n// Moment\nimport moment from 'moment'\n\n// UI\nimport { useInterval } from '../useInterval'\n\nexport function useTimer({\n  autoStart = true,\n  interval = 1000,\n  startTime,\n  endTime\n} = {}) {\n  const getTime = () => {\n    let diff = 0\n    const now = endTime ? moment(endTime) : moment()\n    if (typeof startTime === 'string') {\n      diff = now.diff() - moment(startTime).diff()\n    }\n    return diff > -1 ? diff : 0\n  }\n\n  const [time, setTime] = useState(getTime())\n  const [timer, setTimer] = useState(null)\n\n  useInterval(() => {\n    setTime((prev) => prev + interval)\n  }, timer)\n\n  const start = () => {\n    if (!timer) setTimer(interval)\n  }\n\n  const stop = () => {\n    setTimer(null)\n  }\n\n  useEffect(() => {\n    if (autoStart) start()\n    return () => {\n      stop()\n    }\n  }, [])\n\n  const getFormattedTime = () => {\n    const temp = moment.duration(time)\n    return {\n      seconds: temp.seconds().toString().padStart(2, '0'),\n      minutes: temp.minutes().toString().padStart(2, '0'),\n      hours: parseInt(temp.asHours(), 10),\n      exactHours: temp.asHours().toFixed(2)\n    }\n  }\n\n  return { time: getFormattedTime(), start, stop }\n}\n"],"file":"useTimer.js"}