{"version":3,"sources":["../../../components/hooks/useComponentCommunication/useSubscription.js"],"names":["useEffect","array","func","instanceOf","string","Subject","useComponentCommunication","dependencies","id","messageName","onRecieve","subscriber","Subscription","subscribe","message","name","payload","unsubscribe","propTypes","isRequired"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,MAAlC,QAAgD,YAAhD,C,CAEA;;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,OAMnC;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,EAII,QAJJA,EAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,UACI,QADJA,UACI;AACJX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,YAAY,GAAGD,UAAU,CAACE,SAAX,CAAqB,UAACC,OAAD,EAAa;AACrD,UAAIA,OAAO,CAACC,IAAR,KAAiBN,WAAjB,KAAiC,CAACD,EAAD,IAAOA,EAAE,KAAKM,OAAO,CAACN,EAAvD,CAAJ,EAAgE;AAC9DE,QAAAA,SAAS,CAACI,OAAO,CAACE,OAAT,CAAT;AACD;AACF,KAJoB,CAArB;AAKA,WAAO,YAAM;AACXJ,MAAAA,YAAY,CAACK,WAAb;AACD,KAFD;AAGD,GATQ,EASNV,YATM,aASNA,YATM,cASNA,YATM,GASU,EATV,CAAT;AAUD,CAjBM;AAmBPD,yBAAyB,CAACY,SAA1B,GAAsC;AACpCX,EAAAA,YAAY,EAAEN,KADsB;AAEpCO,EAAAA,EAAE,EAAEJ,MAFgC;AAGpCK,EAAAA,WAAW,EAAEL,MAAM,CAACe,UAHgB;AAIpCT,EAAAA,SAAS,EAAER,IAAI,CAACiB,UAJoB;AAKpCR,EAAAA,UAAU,EAAER,UAAU,CAACE,OAAD,CAAV,CAAoBc;AALI,CAAtC","sourcesContent":["/**\n * Hooks - Use Component Communication - Use Subscription\n */\n\n// React\nimport { useEffect } from 'react'\nimport { array, func, instanceOf, string } from 'prop-types'\n\n// RXJS\nimport { Subject } from 'rxjs'\n\nexport const useComponentCommunication = ({\n  dependencies,\n  id,\n  messageName,\n  onRecieve,\n  subscriber\n}) => {\n  useEffect(() => {\n    const Subscription = subscriber.subscribe((message) => {\n      if (message.name === messageName && (!id || id === message.id)) {\n        onRecieve(message.payload)\n      }\n    })\n    return () => {\n      Subscription.unsubscribe()\n    }\n  }, dependencies ?? [])\n}\n\nuseComponentCommunication.propTypes = {\n  dependencies: array,\n  id: string,\n  messageName: string.isRequired,\n  onRecieve: func.isRequired,\n  subscriber: instanceOf(Subject).isRequired\n}\n"],"file":"useSubscription.js"}