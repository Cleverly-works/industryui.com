{"version":3,"sources":["../../components/hooks/useGeoCoder.js"],"names":["useEffect","useState","GeoCoder","useGeoCoder","address","apiKey","city","language","region","lat","lng","coordinates","setCoordinates","getCoordinates","geo","fromAddress"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sCAAzB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiD;AAAA,MAA9CC,OAA8C,QAA9CA,OAA8C;AAAA,MAArCC,MAAqC,QAArCA,MAAqC;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBACpCP,QAAQ,CAAC;AAAEQ,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GAAD,CAD4B;AAAA;AAAA,MACnEC,WADmE;AAAA,MACtDC,cADsD;;AAG1EZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,cAAc;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,gBAAAA,GADe,GACT,IAAIZ,QAAJ,CAAa;AACvBG,kBAAAA,MAAM,EAANA,MADuB;AAEvBE,kBAAAA,QAAQ,EAARA,QAFuB;AAGvBC,kBAAAA,MAAM,EAANA;AAHuB,iBAAb,CADS;AAAA;AAAA,uBAOKM,GAAG,CAACC,WAAJ,CAAgB;AAAEX,kBAAAA,OAAO,EAAPA,OAAF;AAAWE,kBAAAA,IAAI,EAAJA;AAAX,iBAAhB,CAPL;;AAAA;AAOfK,gBAAAA,WAPe;AAQrBC,gBAAAA,cAAc,CAACD,WAAD,CAAd;;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAdE,cAAc;AAAA;AAAA;AAAA,OAApB;;AAUAA,IAAAA,cAAc;AACf,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOF,WAAP;AACD,CAlBM","sourcesContent":["/**\n * Hooks  - useGeoCoder\n */\n\n// React\nimport { useEffect, useState } from 'react'\n\n// Services\nimport { GeoCoder } from '../services/google/geocoder/geocoder'\n\nexport const useGeoCoder = ({ address, apiKey, city, language, region }) => {\n  const [coordinates, setCoordinates] = useState({ lat: '', lng: '' })\n\n  useEffect(() => {\n    const getCoordinates = async () => {\n      const geo = new GeoCoder({\n        apiKey,\n        language,\n        region\n      })\n\n      const coordinates = await geo.fromAddress({ address, city })\n      setCoordinates(coordinates)\n    }\n    getCoordinates()\n  }, [])\n\n  return coordinates\n}\n"],"file":"useGeoCoder.js"}